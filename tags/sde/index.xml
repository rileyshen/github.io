<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SDE on Website of Riley</title>
    <link>https://rileyshen.github.io/tags/sde/</link>
    <description>Recent content in SDE on Website of Riley</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 01 Mar 2022 15:56:39 +0800</lastBuildDate><atom:link href="https://rileyshen.github.io/tags/sde/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>learning System design as a landscape architect 1</title>
      <link>https://rileyshen.github.io/post/sys1/</link>
      <pubDate>Tue, 01 Mar 2022 15:56:39 +0800</pubDate>
      
      <guid>https://rileyshen.github.io/post/sys1/</guid>
      
        <description>&lt;p&gt;Rethink system design in a much fun way, as a former urban planner/landscape planner. Take design twitter as example&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;Design twitter &amp;ndash; Present a Landscape Design&lt;/p&gt;
&lt;h2 id=&#34;1-whats-is-the-scenario-planning-of-this-project&#34;&gt;1. what&amp;rsquo;s is the &lt;strong&gt;scenario&lt;/strong&gt; planning of this project&lt;/h2&gt;
&lt;p&gt;Landscape Architects won&amp;rsquo;t jump into drawing a good site planning immediately, nor the system design. The first step is always to clarify the project and know your client demands as much as possible.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;what problem you want to solve?&lt;/li&gt;
&lt;li&gt;what basic function need here?&lt;/li&gt;
&lt;li&gt;Features, QPS, DAU, Interface analysis (site condition like land, weather, population, culture analysis in a project)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;need basic data about twitter: MAU 330M, DAO: 200m&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;connunicate the basic function need here&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Register / Login&lt;/li&gt;
&lt;li&gt;User Profile Display /  Edit&lt;/li&gt;
&lt;li&gt;Upload Image / Video&lt;/li&gt;
&lt;li&gt;Search&lt;/li&gt;
&lt;li&gt;Post / Share a tweet&lt;/li&gt;
&lt;li&gt;Timeline/News Feed&lt;/li&gt;
&lt;li&gt;Follow / unFollow a user&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pick the one your clients need (interviewee)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Post&lt;/li&gt;
&lt;li&gt;Timeline&lt;/li&gt;
&lt;li&gt;News Feed&lt;/li&gt;
&lt;li&gt;Follow / Unfollow&lt;/li&gt;
&lt;li&gt;Register / Login&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Features (site condition)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Concurrent User :&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Read QPS: &lt;strong&gt;DAO * average number of queries by a user / seconds in a day&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;150 M * 50 / 86400 ~ 100k&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Peak = 100k * 3 ~ 300k&lt;/li&gt;
&lt;li&gt;Fast Growing: Max peak users in 3 months = Peak users * 2 (not for twitter)&lt;/li&gt;
&lt;li&gt;Write QPS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;QPS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;100: your laptop can the web server&lt;/li&gt;
&lt;li&gt;1 k : a web server, need consider single point failure, SQL database&lt;/li&gt;
&lt;li&gt;1 m : 100 web server cluster, need consider maintainance, NoSQL database(Memchched), Cassandra is 10 k QPS&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-master-plan-and-zoning-concept&#34;&gt;2. master plan and zoning concept&lt;/h2&gt;
&lt;p&gt;After site analysis, It&amp;rsquo;s time to give a draft drawing sketche, with enough imformation (which need communicate with your client/team members)&lt;/p&gt;
&lt;p&gt;In a draft drawing sketches, it would contains：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;traffic plan&lt;/li&gt;
&lt;li&gt;commerical plan&lt;/li&gt;
&lt;li&gt;green system&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;System design:(zoning plan)&lt;/p&gt;
&lt;h3 id=&#34;service&#34;&gt;&lt;strong&gt;Service&lt;/strong&gt;&lt;/h3&gt;
&lt;h3 id=&#34;router&#34;&gt;&lt;strong&gt;Router&lt;/strong&gt;&lt;/h3&gt;
&lt;h4 id=&#34;-user-service&#34;&gt;+ &lt;strong&gt;User Service&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Register&lt;/li&gt;
&lt;li&gt;Login&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;-tweet-service&#34;&gt;+ &lt;strong&gt;Tweet Service&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Post a tweet&lt;/li&gt;
&lt;li&gt;News Feed&lt;/li&gt;
&lt;li&gt;Timeline&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;-media-service&#34;&gt;+ &lt;strong&gt;Media Service&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Upload Image&lt;/li&gt;
&lt;li&gt;Upload Video&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;-friendship-service&#34;&gt;+ &lt;strong&gt;Friendship Service&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Follow&lt;/li&gt;
&lt;li&gt;Unfollow&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3-core-area-plans1-500&#34;&gt;3. core area plans(1: 500)&lt;/h2&gt;
&lt;p&gt;In a draft drawing sketches, it would contains：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pavment plan&lt;/li&gt;
&lt;li&gt;rainstom plan&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;storage&#34;&gt;&lt;strong&gt;Storage&lt;/strong&gt;&lt;/h3&gt;
&lt;h4 id=&#34;-user-service-1&#34;&gt;+ &lt;strong&gt;User Service&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Register&lt;/li&gt;
&lt;li&gt;Login&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SQL&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;-tweet-service-1&#34;&gt;+ &lt;strong&gt;Tweet Service&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Post a tweet&lt;/li&gt;
&lt;li&gt;News Feed&lt;/li&gt;
&lt;li&gt;Timeline&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NoSQL&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;-media-service-1&#34;&gt;+ &lt;strong&gt;Media Service&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Upload Image&lt;/li&gt;
&lt;li&gt;Upload Video&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;File System&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;-friendship-service-1&#34;&gt;+ &lt;strong&gt;Friendship Service&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Follow&lt;/li&gt;
&lt;li&gt;Unfollow&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SQL/NoSQL&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;Please design schema
&lt;strong&gt;User Service&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Table&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;          &lt;span class=&#34;nx&#34;&gt;integer&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;username&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;varchar&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt;       &lt;span class=&#34;nx&#34;&gt;varchar&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;password&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;varchar&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Tweet Service&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Tweet&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Table&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;              &lt;span class=&#34;nx&#34;&gt;integer&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;user_id&lt;/span&gt;         &lt;span class=&#34;nx&#34;&gt;Foreign&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Key&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;content&lt;/span&gt;         &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;created_time&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;timestamp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Media Service&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Friendship Service&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Friendship&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Table&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;from_user_id&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;Foreign&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Key&lt;/span&gt;     
&lt;span class=&#34;nx&#34;&gt;to_user_id&lt;/span&gt;      &lt;span class=&#34;nx&#34;&gt;Foreign&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Key&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;created_time&lt;/span&gt;    &lt;span class=&#34;nx&#34;&gt;timestamp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Interviewer: how to storage and get the News Feed&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;pull-vs-push&#34;&gt;PULL vs PUSH&lt;/h3&gt;
&lt;h4 id=&#34;pull&#34;&gt;PULL&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;algorithm: when users check New Feed, get every friend&amp;rsquo;s the first 100 tweets, merge them into the frist 100 News Feed&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Mergr K sorted Arrays&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;time complexity: basically you can ignore the Mergr K sorted Arrays times, N times DB Reads is much more costly&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;User&lt;/code&gt; &amp;ndash; fetch News Feed -&amp;gt; &lt;code&gt;Web Server&lt;/code&gt; &amp;lt;-get followings-&amp;gt;&lt;code&gt;Friendship Table&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Web Server&lt;/code&gt; &amp;lt;-get tweets from followings-&amp;gt;&lt;code&gt;Tweet Table&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Web Server&lt;/code&gt; -merge and return-&amp;gt;&lt;code&gt;User&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;cons:&lt;/p&gt;
&lt;p&gt;multiple DB Reads is very slow when users fetch News Feed&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;n&#34;&gt;getNewsFeed&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;•&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;followings&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DB&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getFollowings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;•&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;news_feed&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;•&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;follow&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;followings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;•&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tweets&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DB&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getTweets&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;follow&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;to_user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;•&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;news_feed&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;merge&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tweets&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;•&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;news_feed&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;•&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;news_feed&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;the&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;first&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;100&lt;/span&gt;


&lt;span class=&#34;err&#34;&gt;•&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;postTweet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tweet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;•&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DB&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;insertTweet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tweet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;•&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;succes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;push&#34;&gt;PUSH&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;algorithm: every user has a list store his News Feed information&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Fanout: User post a tweet, push the tweet into his followers&amp;rsquo;s News Feed lists&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;when a user check his News Feed, he just read from his News Feed list&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;time complexity: 1 DB Read, N times Writes. (Async)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;User&lt;/code&gt; &amp;lt;&amp;ndash; Post a new tweet -&amp;gt; &lt;code&gt;Web Server&lt;/code&gt; &amp;lt;-Insert the tweet to DB-&amp;gt;&lt;code&gt;tweet Table&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Web Server&lt;/code&gt; -sent tweets to friends-&amp;gt;&lt;code&gt;Async Tasks Server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Async Tasks Server&lt;/code&gt; &amp;lt;-get followers-&amp;gt;&lt;code&gt;friendship Table&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Async Tasks Server&lt;/code&gt; &amp;lt;-Fanout: insert new tweet to followers news feed-&amp;gt;&lt;code&gt;New Feed Table&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;cons:&lt;/p&gt;
&lt;p&gt;huge followers numbers&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;n&#34;&gt;getNewsFeed&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;•&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DB&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getNewsFeed&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;err&#34;&gt;•&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;postTweet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tweet_info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

    &lt;span class=&#34;err&#34;&gt;•&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tweet&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DB&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;insertTweet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tweet_info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;•&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AsyncService&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;fanoutTweet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tweet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;•&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;success&lt;/span&gt;
&lt;span class=&#34;nl&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;nl&#34;&gt;AsyncService:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fanoutTweet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tweet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;•&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;followers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DB&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;getFollowers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;•&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;follower&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;followers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;err&#34;&gt;•&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;DB&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;insertNewsFeed&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tweet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;follower&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;pull-vs-push-1&#34;&gt;PULL vs PUSH&lt;/h4&gt;
&lt;p&gt;tweet and facebook are using pull&lt;/p&gt;
&lt;h2 id=&#34;4-details-design-show-how-to-solve-some-specific-problem-and-improve-the-plan-in-the-future&#34;&gt;4. details design show how to solve some specific problem and improve the plan in the future&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;optimize&#34;&gt;Optimize&lt;/h3&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;scalability-enhancement-of-pull-server-functions&#34;&gt;Scalability Enhancement of Pull Server functions&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;the slowest part is happening when user request News Feed
&lt;ul&gt;
&lt;li&gt;add Cache before DB Read&lt;/li&gt;
&lt;li&gt;cache every user&amp;rsquo;s Timeline
&lt;ul&gt;
&lt;li&gt;n times cache reqest&lt;/li&gt;
&lt;li&gt;trade off: all the cache, or the recent 1000 in cache&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;cache every user&amp;rsquo;s News Feed
&lt;ul&gt;
&lt;li&gt;with Cache: merge users recent 100 tweets, then get the first 100&lt;/li&gt;
&lt;li&gt;without Cache: merger all the tweets after timestamp&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;scalability-enhancement-of-push-server-functions&#34;&gt;Scalability Enhancement of Push Server functions&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;compare Pull model store News Feed in Memory, Push model stores in Disk, and Disk is cheap&lt;/li&gt;
&lt;li&gt;Inactive Users
&lt;ul&gt;
&lt;li&gt;Rank followers by weight(last login time)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;followers &amp;raquo; following: fanout would take hours
&lt;ul&gt;
&lt;li&gt;trade off: Pull + Push vs Pull&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;right-optimize-thinking&#34;&gt;right Optimize thinking&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Try to optimize with minimal changes to the existing model;&lt;/p&gt;
&lt;p&gt;Estimate long-term growth and assess whether it is worth switching the entire model&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;push--pull&#34;&gt;Push + Pull&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;ordinal user (Push)&lt;/li&gt;
&lt;li&gt;influencer (Pull), followers come to influencer&amp;rsquo;s timeline fetch the News Feed, merge into their News Feed&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Table&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;           &lt;span class=&#34;nx&#34;&gt;integer&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;username&lt;/span&gt;     &lt;span class=&#34;nx&#34;&gt;varchar&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;varchar&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;password&lt;/span&gt;     &lt;span class=&#34;nx&#34;&gt;varchar&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;is_influencer&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;boolean&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;h3 id=&#34;maintenance&#34;&gt;Maintenance&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Robust&lt;/li&gt;
&lt;li&gt;Scalability&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;unfollow problem(async)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;follow: merge timeline into News Feed asynchronously&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;unfollow: pick out tweets from News Feed asynchronously&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Async reduces the processing time&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;async improve user experience&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;however, after unfollowing, the user may still find his News Feed in timeline&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;store likes&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Tweet&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Table&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;                  &lt;span class=&#34;nx&#34;&gt;integer&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;user_id&lt;/span&gt;             &lt;span class=&#34;nx&#34;&gt;Foreign&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Key&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;content&lt;/span&gt;             &lt;span class=&#34;nx&#34;&gt;text&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;created_time&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;timestamp&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;nums_of_like&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;      &lt;span class=&#34;nx&#34;&gt;integer&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;nums_of_comments&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;integer&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;nums_of_retweets&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;integer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Like&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Table&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;                  &lt;span class=&#34;nx&#34;&gt;integer&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;user_id&lt;/span&gt;             &lt;span class=&#34;nx&#34;&gt;Foreign&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Key&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;tweet_id&lt;/span&gt;            &lt;span class=&#34;nx&#34;&gt;Foreign&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Key&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;created_time&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;timestamp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Normalize vs Denormalize&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;normalize-vs-denormalize-likes&#34;&gt;Normalize vs Denormalize likes&lt;/h4&gt;
&lt;h5 id=&#34;normalize-likes&#34;&gt;Normalize likes&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;SELECT COUNT * FROM like_table where tweet_id=xxx;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pros: Standardized, most accurate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cons: slow, would cause O(n) SQL Queries&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;denormalize-likes&#34;&gt;Denormalize likes&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;UPDATE like_table SET num_of_likes = num_of_likes + 1 where tweet_id=xxx;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;UPDATE like_table SET num_of_likes = num_of_likes - 1 where tweet_id=xxx;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;no need SQL Queries, because num_of_likes stores in tweet&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Thundering Herd&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The “thundering herd” problem occurs in a highly concurrent environment (typically, many users). When many users make a request to the same piece of data at the same time, and there is a cache miss (the data for the cached element is not present in the cache, data is kicked out due to cache expiration or elimination by the elimination algorithm, etc) the thundering herd problem is triggered.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>learning System design as a landscape architect 2</title>
      <link>https://rileyshen.github.io/post/sys2/</link>
      <pubDate>Tue, 01 Mar 2022 15:56:39 +0800</pubDate>
      
      <guid>https://rileyshen.github.io/post/sys2/</guid>
      
        <description>&lt;p&gt;Rethink system design in a much fun way, as a former urban planner/landscape planner. Take Flash Sale as example&lt;/p&gt;
&lt;!-- more --&gt;
&lt;!-- TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#whats-is-the-scenario-planning-of-this-project&#34; &gt;what&amp;amp;rsquo;s is the &amp;lt;strong&amp;gt;scenario&amp;lt;/strong&amp;gt; planning of this project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#service&#34; &gt;Service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#select-database-for-each-service&#34; &gt;select database for each service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#design-schema&#34; &gt;design schema&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#data-flow&#34; &gt;data flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#limited-time-offer&#34; &gt;Limited Time Offer&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#deduct-a-quantity-from-a-database&#34; &gt;deduct a quantity from a database&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#transaction-database-and-lock-slow&#34; &gt;transaction database and lock slow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#update-lock-the-row-recommend&#34; &gt;UPDATE lock the row recommend&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#over-sale-problem&#34; &gt;over sale problem&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#lua-check-and-set&#34; &gt;Lua: check-and-set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#message-queue-for-the-peak-clipping&#34; &gt;Message Queue for the Peak Clipping&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#deduct-quantity-timing&#34; &gt;deduct quantity timing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#limit-orders-per-customer&#34; &gt;Limit Orders Per Customer&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#redis-data-verification&#34; &gt;Redis data verification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#data-consistency-for-payments-and-destocking&#34; &gt;Data consistency for payments and destocking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scale&#34; &gt;scale&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#prevent-overload-of-product-pages&#34; &gt;Prevent overload of product pages&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#front-end-static-rescouces-cdn&#34; &gt;Front-end Static Rescouces CDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#front-end-current-limiting&#34; &gt;Front-end current-limiting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#flash-sale-server-crash&#34; &gt;flash sale server crash&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#fuse-or-circuit-breaker&#34; &gt;Fuse or Circuit-breaker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#prevent-malicious-requests-or-crawler-requests&#34; &gt;Prevent malicious requests or crawler requests&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#verification-code-mechanism&#34; &gt;Verification Code Mechanism&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ratelimit-mechanism&#34; &gt;Ratelimit Mechanism&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#blacklist-mechanism&#34; &gt;Blacklist Mechanism&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /TOC --&gt;
&lt;p&gt;Flash Sale &amp;ndash;&lt;/p&gt;
&lt;h2 id=&#34;1-whats-is-the-scenario-planning-of-this-project&#34;&gt;1. what&amp;rsquo;s is the &lt;strong&gt;scenario&lt;/strong&gt; planning of this project&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-what&#39;s-is-the-**scenario**-planning-of-this-project&#34; name=&#34;what&#39;s-is-the-**scenario**-planning-of-this-project&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;QPS&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;1000 people were coming to the site per second, but there will be 100 k people when an attractive limited-time offer include a big discount.&lt;/p&gt;
&lt;p&gt;QPS then increased by 100&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Analyzing flash sale Problems&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Large flow and high concurrency&lt;/li&gt;
&lt;li&gt;Over sale&lt;/li&gt;
&lt;li&gt;Malicious ticked grab&lt;/li&gt;
&lt;li&gt;fixed schedule&lt;/li&gt;
&lt;li&gt;Purchase limit&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Demand disassembly
shops:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;register for sales on&lt;/li&gt;
&lt;li&gt;set up detail information&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;clients:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flash sale page&lt;/li&gt;
&lt;li&gt;buy&lt;/li&gt;
&lt;li&gt;order&lt;/li&gt;
&lt;li&gt;pay&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;21-service&#34;&gt;2.1 Service&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-service&#34; name=&#34;service&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gateway&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;limited time pomotion Service + database&lt;/li&gt;
&lt;li&gt;Commodity info &amp;amp; Stock service + database&lt;/li&gt;
&lt;li&gt;Order Service + database&lt;/li&gt;
&lt;li&gt;Payment Service + database&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;22-select-database-for-each-service&#34;&gt;2.2 select database for each service&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-select-database-for-each-service&#34; name=&#34;select-database-for-each-service&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;23-design-schema&#34;&gt;2.3 design schema&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-design-schema&#34; name=&#34;design-schema&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;commodity_info&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;commodity_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;desc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;iphone&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xxxxx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5999&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;stock_info&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;stock_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commodity_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;event_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stock&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;lock&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;300&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;flashSale_info&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;flashSale_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flashSale_name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commodity_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xxxx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;189&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;order_info&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;order_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flashSale_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commodity_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;paid&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;189&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;jack&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Indexing can dramatically increase query speed&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;24-data-flow&#34;&gt;2.4 data flow&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-data-flow&#34; name=&#34;data-flow&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;store&lt;/code&gt; &amp;ndash;select &amp;ndash;&amp;gt; &lt;code&gt;commodity_info&lt;/code&gt;
|&amp;mdash;-insert &amp;ndash;&amp;gt; &lt;code&gt;stock_info &lt;/code&gt;
|&amp;ndash;select &amp;ndash;&amp;gt; &lt;code&gt;flashSale_info &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;user&lt;/code&gt; &amp;ndash;select &amp;ndash;&amp;gt; &lt;code&gt;flashSale_info&lt;/code&gt;&amp;ndash;&amp;gt; &lt;code&gt;commodity_info&lt;/code&gt;&amp;ndash;&amp;gt; &lt;code&gt;stock_info&lt;/code&gt;
|&amp;mdash;-insert &amp;ndash;&amp;gt; &lt;code&gt;order_info&lt;/code&gt;
|&amp;ndash;update &amp;ndash;&amp;gt; &lt;code&gt;stock_info&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;25-limited-time-offer&#34;&gt;2.5 Limited Time Offer&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-limited-time-offer&#34; name=&#34;limited-time-offer&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;deduct-a-quantity-from-a-database&#34;&gt;deduct a quantity from a database&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-deduct-a-quantity-from-a-database&#34; name=&#34;deduct-a-quantity-from-a-database&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stock&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stock_info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commodity_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flashSale_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stock_info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SET&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stock&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stock&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commodity_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flashSale_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;solve oversale problem&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;transaction-database-and-lock-slow&#34;&gt;transaction database and lock (slow)&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-transaction-database-and-lock-slow&#34; name=&#34;transaction-database-and-lock-slow&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Start Transcation&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;add lock&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stock&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stock_info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commodity_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flashSale_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FOR&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;deducted&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stock_info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SET&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stock&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stock&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commodity_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flashSale_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;commit&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;update-lock-the-row-recommend&#34;&gt;UPDATE lock the row (recommend)&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-update-lock-the-row-recommend&#34; name=&#34;update-lock-the-row-recommend&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;add lock&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stock&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stock_info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commodity_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flashSale_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;deducted&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stock_info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SET&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stock&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stock&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;commodity_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flashSale_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stock&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;how about too many concurrent connections cause mysql crash&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;On average, a mysql web server can handle 1000 requests per second
but a single point of Redis can support 100,000 QPS. Consider loading stock information into Redis. update quantity directly through Redis&lt;/p&gt;
&lt;p&gt;before the event begin,&lt;/p&gt;
&lt;p&gt;&lt;code&gt;store&lt;/code&gt; &amp;ndash;&amp;gt; read from mysql &lt;code&gt;flashSale_info&lt;/code&gt;&amp;ndash;&amp;gt;`add in Redis&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SET flashSale:30:commodity:11:stock 10&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;SET KEY&lt;/strong&gt;(flashSale:30:commodity:11:stock) &lt;strong&gt;VALUE&lt;/strong&gt; (10)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;deduct quantity through Redis&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;data flow:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;user&lt;/code&gt; &amp;ndash;&amp;gt; read from redis &amp;ndash;&amp;gt; stock &amp;gt; 0 &amp;ndash; NO &amp;ndash; &amp;gt; the end of event&lt;/p&gt;
&lt;p&gt;&lt;code&gt;user&lt;/code&gt; &amp;ndash;&amp;gt; read from redis &amp;ndash;&amp;gt; stock &amp;gt; 0 &amp;ndash; YES &amp;ndash; &amp;gt; stock - 1 (redis) &amp;ndash;&amp;gt; lock the quentity, create order &amp;ndash;&amp;gt; pay &amp;ndash;&amp;gt; stock -1&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GET flashSale:30:commodity:11:stock&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;DECR flashSale:30:commodity:11:stock&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Most requests are blocked by Redis.&lt;/p&gt;
&lt;p&gt;For example, if there are only 100 iPhones, then The volume of requests to MySQL is theoretically 100.&lt;/p&gt;
&lt;h4 id=&#34;over-sale-problem&#34;&gt;over sale problem&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-over-sale-problem&#34; name=&#34;over-sale-problem&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;lua-check-and-set&#34;&gt;Lua: check-and-set&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-lua%3A-check-and-set&#34; name=&#34;lua%3A-check-and-set&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;the limited time traffic is still too much for mysql, sell 100000&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h5 id=&#34;message-queue-for-the-peak-clipping&#34;&gt;Message Queue for the Peak Clipping&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-message-queue-for-the-peak-clipping&#34; name=&#34;message-queue-for-the-peak-clipping&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;deduct-quantity-timing&#34;&gt;deduct quantity timing&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-deduct-quantity-timing&#34; name=&#34;deduct-quantity-timing&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lock the stock after placing the order, and reduce the quantity after the payment is successful&lt;/p&gt;
&lt;h3 id=&#34;limit-orders-per-customer&#34;&gt;Limit Orders Per Customer&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-limit-orders-per-customer&#34; name=&#34;limit-orders-per-customer&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;redis-data-verification&#34;&gt;Redis data verification&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-redis-data-verification&#34; name=&#34;redis-data-verification&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;user&lt;/code&gt; &amp;mdash;-&amp;gt; &lt;code&gt;check user id in Redis set or not&lt;/code&gt;&amp;mdash;-YES&amp;ndash;&amp;gt; &lt;code&gt;fail to buy&lt;/code&gt;
.                                               |
.                                               |- &amp;ndash;&amp;gt; &lt;code&gt;deduct quantity&lt;/code&gt;&amp;ndash;&amp;gt; &lt;code&gt;add user id in Redis set&lt;/code&gt;
.                                                               |&amp;mdash;-&amp;gt; &lt;code&gt;order, pay&lt;/code&gt;
.                                                                           |&amp;ndash;&amp;gt; success? 
.                                                                                   |-NO-&amp;gt; delete user id in Redis set&lt;/p&gt;
&lt;h3 id=&#34;data-consistency-for-payments-and-destocking&#34;&gt;Data consistency for payments and destocking&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-data-consistency-for-payments-and-destocking&#34; name=&#34;data-consistency-for-payments-and-destocking&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Distributed transaction&lt;/p&gt;
&lt;h3 id=&#34;scale&#34;&gt;scale&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-scale&#34; name=&#34;scale&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;prevent-overload-of-product-pages&#34;&gt;Prevent overload of product pages&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-prevent-overload-of-product-pages&#34; name=&#34;prevent-overload-of-product-pages&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;front-end-static-rescouces-cdn&#34;&gt;Front-end Static Rescouces CDN&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-front-end-static-rescouces-cdn&#34; name=&#34;front-end-static-rescouces-cdn&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;front-end-current-limiting&#34;&gt;Front-end current-limiting&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-front-end-current-limiting&#34; name=&#34;front-end-current-limiting&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;flash-sale-server-crash&#34;&gt;flash sale server crash&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-flash-sale-server-crash&#34; name=&#34;flash-sale-server-crash&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;fuse-or-circuit-breaker&#34;&gt;Fuse or Circuit-breaker&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-fuse-or-circuit-breaker&#34; name=&#34;fuse-or-circuit-breaker&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;prevent-malicious-requests-or-crawler-requests&#34;&gt;Prevent malicious requests or crawler requests&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-prevent-malicious-requests-or-crawler-requests&#34; name=&#34;prevent-malicious-requests-or-crawler-requests&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;verification-code-mechanism&#34;&gt;Verification Code Mechanism&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-verification-code-mechanism&#34; name=&#34;verification-code-mechanism&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;ratelimit-mechanism&#34;&gt;Ratelimit Mechanism&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-ratelimit-mechanism&#34; name=&#34;ratelimit-mechanism&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;blacklist-mechanism&#34;&gt;Blacklist Mechanism&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-blacklist-mechanism&#34; name=&#34;blacklist-mechanism&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>learning System design as a landscape architect 3</title>
      <link>https://rileyshen.github.io/post/sys3/</link>
      <pubDate>Tue, 01 Mar 2022 15:56:39 +0800</pubDate>
      
      <guid>https://rileyshen.github.io/post/sys3/</guid>
      
        <description>&lt;p&gt;Rethink system design in a much fun way, as a former urban planner/landscape planner. Take User System as example&lt;/p&gt;
&lt;!-- more --&gt;
&lt;!-- TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#whats-is-the-scenario-planning-of-this-project&#34; &gt;what&amp;amp;rsquo;s is the &amp;lt;strong&amp;gt;scenario&amp;lt;/strong&amp;gt; planning of this project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#service&#34; &gt;Service&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#authentication-service&#34; &gt;Authentication Service&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#friendship-service&#34; &gt;Friendship Service&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#directed-relationship&#34; &gt;directed relationship&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#store-data-in-sql-db&#34; &gt;store data in SQL DB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#store-data-in-nosql-db&#34; &gt;store data in NoSQL DB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /TOC --&gt;
&lt;p&gt;User System&lt;/p&gt;
&lt;h2 id=&#34;1-whats-is-the-scenario-planning-of-this-project&#34;&gt;1. what&amp;rsquo;s is the &lt;strong&gt;scenario&lt;/strong&gt; planning of this project&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-what&#39;s-is-the-**scenario**-planning-of-this-project&#34; name=&#34;what&#39;s-is-the-**scenario**-planning-of-this-project&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A system allow users to regest, login, query, modify their information.&lt;/p&gt;
&lt;p&gt;we need consider the query qps.&lt;/p&gt;
&lt;p&gt;assume this system support &lt;strong&gt;100 M DAO&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;regest + login + modify QPS&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;100 M * 0.1 / 86400 = 100&lt;/li&gt;
&lt;li&gt;0.1 = every user regest + login + modify per day&lt;/li&gt;
&lt;li&gt;Peak = 100 * 3 = 300&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;query QPS&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;100 M * 100 / 86400 = 100 K&lt;/li&gt;
&lt;li&gt;100 = every user query per day (check friends, update message page, sent message)&lt;/li&gt;
&lt;li&gt;Peak = 100 k* 3 = 300 k&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Analyzing user system service (zoning function)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;AuthenticationServer: regest, login&lt;/li&gt;
&lt;li&gt;UserService: user information storage and query&lt;/li&gt;
&lt;li&gt;FriendService: store friend relate information&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MySQL / PosgreSQL :1k QPS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MongoDB / Cassandra NoSQL :10k QPS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redis / Memcached : 100k ~ 1m QPS&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;UserSystem is system read heavy and write less frequently, use Cache can&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Demand disassembly
shops:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;register for sales on&lt;/li&gt;
&lt;li&gt;set up detail information&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;clients:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flash sale page&lt;/li&gt;
&lt;li&gt;buy&lt;/li&gt;
&lt;li&gt;order&lt;/li&gt;
&lt;li&gt;pay&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;p&gt;Memcached to improve DB query&lt;/p&gt;
&lt;p&gt;WOULD CAUSE INCONSISTENT : DIRTY DATA&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;delete&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;C&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;cache&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;RECOMMEND&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;database.set(key, user);cache.delete(key)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;User system is heavily Read System,  INCONSISTENT Occurrence probabilities much lower than &lt;code&gt;cache.delete + db.set&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Furthurmore, Use Cache &lt;code&gt;ttl&lt;/code&gt; mechanism&lt;/p&gt;
&lt;p&gt;Set a short valid time, such as 7 days. Then even if there is a data inconsistency at a very low probability, it will be inconsistent for up to 7 days.&lt;/p&gt;
&lt;p&gt;It means we allow the database and cache to be inconsistent &amp;ldquo;for a short time&amp;rdquo;, but will eventually be consistent.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cache Aside (more frequently used)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;DB &amp;lt;&amp;mdash;&amp;gt; Web Server &amp;lt;&amp;ndash;&amp;gt; Cache&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cache Through&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Web Server &amp;lt;&amp;mdash;&amp;gt; DB  &amp;lt;&amp;ndash;&amp;gt; Cache&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-service&#34;&gt;2 Service&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-service&#34; name=&#34;service&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;21-authentication-service&#34;&gt;2.1 Authentication Service&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-authentication-service&#34; name=&#34;authentication-service&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;session&lt;/li&gt;
&lt;li&gt;cookie&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;22-friendship-service&#34;&gt;2.2 Friendship Service&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-friendship-service&#34; name=&#34;friendship-service&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;directed-relationship&#34;&gt;directed relationship&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-directed-relationship&#34; name=&#34;directed-relationship&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Twitter, Instagram&lt;/p&gt;
&lt;h4 id=&#34;store-data-in-sql-db&#34;&gt;store data in SQL DB&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-store-data-in-sql-db&#34; name=&#34;store-data-in-sql-db&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Friendship Table&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;from_user_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Foreign&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to_user_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;Foreign&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;followee&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;get all followees of X&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;select * from friendship where from_user_id=x&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;get all followers of X&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;select * from friendship where to_user_id=x&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;store-data-in-nosql-db&#34;&gt;store data in NoSQL DB&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-store-data-in-nosql-db&#34; name=&#34;store-data-in-nosql-db&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;take Cassandra as an example&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;3 layer NoSQL DB Table&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;row_key: Hash key or Partition Key&lt;/li&gt;
&lt;li&gt;column_key
&lt;ul&gt;
&lt;li&gt;insert(row_key,  column_key, value)&lt;/li&gt;
&lt;li&gt;column_key can be sorted&lt;/li&gt;
&lt;li&gt;query(row_key,  column_start, column_end)&lt;/li&gt;
&lt;li&gt;column_key can be complex type, timestamp + user_id&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;value: serialize data store into value&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;how Cassandra store friendship table&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Cassandra key =  row_key + column_key&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;row_key&lt;/strong&gt; user_id 1 &amp;ndash;&amp;gt; &lt;strong&gt;column_key&lt;/strong&gt; &amp;lt;friend_user_id2&amp;gt; &amp;ndash;&amp;gt; &lt;strong&gt;value&lt;/strong&gt; &amp;lt;is_mutual_friend, is_blocked, timestamp&amp;gt;
.                |
.                &amp;ndash;&amp;gt; &lt;strong&gt;column_key&lt;/strong&gt; &amp;lt;friend_user_id3&amp;gt;&amp;ndash;&amp;gt; &lt;strong&gt;value&lt;/strong&gt; &amp;lt;is_mutual_friend, is_blocked, timestamp&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;row_key&lt;/strong&gt; user_id 2 &amp;ndash;&amp;gt; &lt;strong&gt;column_key&lt;/strong&gt; &amp;lt;friend_user_id1&amp;gt; &amp;ndash;&amp;gt; &lt;strong&gt;value&lt;/strong&gt; &amp;lt;is_mutual_friend, is_blocked, timestamp&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;how Cassandra store NewsFeed&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;row_key&lt;/strong&gt; owner_id 1 &amp;ndash;&amp;gt; &lt;strong&gt;column_key&lt;/strong&gt; &amp;lt;created_at_1, tweet_id1&amp;gt; &amp;ndash;&amp;gt; &lt;strong&gt;value&lt;/strong&gt; &amp;lt;tweet_data1&amp;gt;
|
.                &amp;ndash;&amp;gt; &lt;strong&gt;column_key&lt;/strong&gt; &amp;lt;created_at_2, tweet_id2&amp;gt; &amp;ndash;&amp;gt; &lt;strong&gt;value&lt;/strong&gt; &amp;lt;tweet_data2&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;SQL VS Nosql&lt;/p&gt;
&lt;p&gt;SQL &amp;ndash;&amp;gt; &lt;strong&gt;Transaction&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SQL &amp;ndash;&amp;gt; structured data, index&lt;/p&gt;
&lt;p&gt;NoSQL &amp;ndash;&amp;gt; Distributed, Auto_scale, Replica&lt;/p&gt;
&lt;p&gt;more frequently, &lt;code&gt;User Table&lt;/code&gt; would be saved in SQL : multi-index&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Friendship Table&lt;/code&gt; would be saved in NoSQL : more efficient for querying&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But if we use Cassandra to store User, find users  by email address or phone numberers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;save User information in UserTable
&lt;ul&gt;
&lt;li&gt;Redis: Key = user_id, value = user information&lt;/li&gt;
&lt;li&gt;Cassandra
&lt;ul&gt;
&lt;li&gt;row_key = user_id&lt;/li&gt;
&lt;li&gt;column_key&lt;/li&gt;
&lt;li&gt;value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;create other tables as index
&lt;ul&gt;
&lt;li&gt;Redis: Key = email/phone/username, value = user_id&lt;/li&gt;
&lt;li&gt;Cassandra
&lt;ul&gt;
&lt;li&gt;row_key = email/phone/username&lt;/li&gt;
&lt;li&gt;column_key&lt;/li&gt;
&lt;li&gt;value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;how to find Mutual Friends between A and B&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;find A&amp;rsquo;s friends list&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;find B&amp;rsquo;s friends list&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;get their intersection&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;improve:&lt;/p&gt;
&lt;p&gt;use Cache, save their list in Cache&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>learning System design as a landscape architect 4</title>
      <link>https://rileyshen.github.io/post/sys4/</link>
      <pubDate>Tue, 01 Mar 2022 15:56:39 +0800</pubDate>
      
      <guid>https://rileyshen.github.io/post/sys4/</guid>
      
        <description>&lt;p&gt;Rethink system design in a much fun way, as a former urban planner/landscape planner. Take Design_TinyURL as example&lt;/p&gt;
&lt;!-- more --&gt;
&lt;!-- TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#prerequisite&#34; &gt;prerequisite&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#how-to-check-next-page-exist-or-not&#34; &gt;How to check next page exist or not&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#get-new-content-updates&#34; &gt;Get new content updates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#design-tiny-url&#34; &gt;Design Tiny URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#whats-is-the-scenario-planning-of-this-project&#34; &gt;what&amp;amp;rsquo;s is the &amp;lt;strong&amp;gt;scenario&amp;lt;/strong&amp;gt; planning of this project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#service&#34; &gt;Service&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#url-service&#34; &gt;URL Service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#storage&#34; &gt;storage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#select&#34; &gt;select&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scale&#34; &gt;Scale&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#use-cache-aside-to-reduce-response-time&#34; &gt;use Cache Aside to reduce response time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#use-geolocation-to-reduce-response-time&#34; &gt;use geolocation to reduce response time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sharding-key&#34; &gt;Sharding Key&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multi-region&#34; &gt;multi region&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /TOC --&gt;
&lt;p&gt;Design_TinyURL&lt;/p&gt;
&lt;h2 id=&#34;prerequisite&#34;&gt;prerequisite&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-prerequisite&#34; name=&#34;prerequisite&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rest API : put the information into the paths, /api/submissions/  &amp;ndash;&amp;gt; you want to submit&lt;/p&gt;
&lt;p&gt;wrong ones:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;err&#34;&gt;/api/accounts/create/&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;/api/accounts/1/delete/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;POST&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;accounts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;DELETE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;accounts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;GET&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;accounts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;PUT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;accounts&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Design News Feed API&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;design api get News Feeds list&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;GET &lt;a href=&#34;https://www.facebook.com/api/newsfeed/&#34;&gt;https://www.facebook.com/api/newsfeed/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;GET &lt;a href=&#34;https://api.facebook.com/newsfeed/&#34;&gt;https://api.facebook.com/newsfeed/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;return content format
clearify JSON or XML&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;design Pagination&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;website&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/api/website/?page=1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;News Feed &amp;ndash;&amp;gt; Endless Pagination&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/api/newsfeed/?max_id=1000&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;how-to-check-next-page-exist-or-not&#34;&gt;How to check next page exist or not&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-how-to-check-next-page-exist-or-not&#34; name=&#34;how-to-check-next-page-exist-or-not&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fetch next_max_id&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-BASH&#34; data-lang=&#34;BASH&#34;&gt;&lt;span class=&#34;nv&#34;&gt;PAGE_SIZE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;
get max_id from request
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; no max_id
    get the updated PAGE_SIZE + &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; 
    get id &amp;lt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; max_id updated PAGE_SIZE + &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; the data is &lt;span class=&#34;m&#34;&gt;21&lt;/span&gt; pages, sign the &lt;span class=&#34;m&#34;&gt;21&lt;/span&gt; id as next_max_id

&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; data:
&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;next_max_id&amp;#39;&lt;/span&gt;:next_max_id,
    &lt;span class=&#34;s1&#34;&gt;&amp;#39;items&amp;#39;&lt;/span&gt;:&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;...nomore than PAGE_SIZE data&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;get-new-content-updates&#34;&gt;Get new content updates&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-get-new-content-updates&#34; name=&#34;get-new-content-updates&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GET /api/newsfeed/?min_id=&lt;id&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;design Mentions data format&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;customize a hyperlink&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;design-tiny-url&#34;&gt;Design Tiny URL&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-design-tiny-url&#34; name=&#34;design-tiny-url&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-whats-is-the-scenario-planning-of-this-project&#34;&gt;1. what&amp;rsquo;s is the &lt;strong&gt;scenario&lt;/strong&gt; planning of this project&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-what&#39;s-is-the-**scenario**-planning-of-this-project&#34; name=&#34;what&#39;s-is-the-**scenario**-planning-of-this-project&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;transfer Long URL into Short URL&lt;/p&gt;
&lt;p&gt;click Short URL will redirect to the original one.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Q: shall we need a one to one mapping to get shorten URL&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Q: short URLs expire after a period&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;DAO (weibo as example) 100M&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;generate a post contains Tiny URL&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;assume 0.1 post contains Tiny URL per person per day&lt;/li&gt;
&lt;li&gt;write QPS: 100 M * 0.1 / 86400 ~ 100&lt;/li&gt;
&lt;li&gt;Peak write QPS = 100 * 2 = 200&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;click a post contains Tiny URL&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;assume 1 post contains Tiny URL per person per day&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;average Read QPS = 100 M * 1 / 86400 ~ 1 k&lt;/li&gt;
&lt;li&gt;Peak Read QPS = 100 * 2 = 2 k&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Storage estimates&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;100 M * 0.1 ~ 10 M&lt;/li&gt;
&lt;li&gt;avergae per URL 100 ~ 1 G&lt;/li&gt;
&lt;li&gt;1 T disk for 3 years&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2 k QPS: MySQL with SSD&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MySQL / PosgreSQL :1k QPS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MongoDB / Cassandra NoSQL :10k QPS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redis / Memcached : 100k ~ 1m QPS&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-service&#34;&gt;2 Service&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-service&#34; name=&#34;service&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;21-url-service&#34;&gt;2.1 URL Service&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-url-service&#34; name=&#34;url-service&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;provide 2 methods&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UrlService.encode(long_ur)&lt;/li&gt;
&lt;li&gt;UrlService.decode(short_ur)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;interface design&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;GET /&amp;lt;short_url&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;return a Http redirect response&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;POST /data/shorten&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data = {url:http://xx}&lt;/li&gt;
&lt;li&gt;return a short ul&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;storage&#34;&gt;storage&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-storage&#34; name=&#34;storage&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;select&#34;&gt;select&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-select&#34; name=&#34;select&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SQL VS NoSQL&lt;/p&gt;
&lt;p&gt;need transcation? &amp;ndash;No, NoSQL + 1
need complex SQL Query? &amp;ndash;No, NoSQL + 1
code is not complex &amp;ndash; NoSQL + 1
QPS, 2 K QPS &amp;ndash; SQL + 1
Scalability, consider the storage and QPS &amp;ndash; SQL + 1
&lt;strong&gt;need Sequential ID&lt;/strong&gt; ? &amp;ndash;depend the algorithm choose here&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SQL provide auto-increment Sequential ID&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;how to shorten that long URL into a tiny URL (6 characters)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;method 1:
random generate shortUrl, put into database&lt;/p&gt;
&lt;p&gt;simple, but would become very slow as data grows&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;shortKey&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;longUrl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a9exBl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wwww&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rileyshen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or NoSql&lt;/p&gt;
&lt;p&gt;table 1 : query Short by Long&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;row_key=longURL, column_key=ShortURL, value=null or timestamp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;table 2 : query Long by  Short&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;row_key=shortURL, column_key=longURL, value=null or timestamp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;method 2: Base62&lt;/p&gt;
&lt;p&gt;effient, but require Sequential ID&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;shortURLtoID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shortURL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shortURL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;();&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;62&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;toBase62&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shortURL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;charAt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;idToshortURL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;chars&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;012...Z&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 0-9, a-z, A-Z
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;short_url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;short_url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;chars&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;charAt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;62&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;short_url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;id&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;62&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;short_url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;short_url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;short_url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;short_url&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;longUrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wwww&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rileyshen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;scale&#34;&gt;Scale&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-scale&#34; name=&#34;scale&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;how to reduce response time&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;use-cache-aside-to-reduce-response-time&#34;&gt;use Cache Aside to reduce response time&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-use-cache-aside-to-reduce-response-time&#34; name=&#34;use-cache-aside-to-reduce-response-time&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;data in Cache&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;long to short (generate new short url)&lt;/li&gt;
&lt;li&gt;short to long (query short url)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;&lt;img src=&#34;https://rileyshen.github.io/images/system7.png&#34;
         alt=&#34;image&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Cache Aside&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&#34;use-geolocation-to-reduce-response-time&#34;&gt;use geolocation to reduce response time&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-use-geolocation-to-reduce-response-time&#34; name=&#34;use-geolocation-to-reduce-response-time&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Optimize server access speed
• Different regions, use different web servers
• Resolve users in different regions to different servers through DNS&lt;/p&gt;
&lt;p&gt;Optimize data access speed
• Use Centralized MySQL+Distributed Memcached
• One MySQL with multiple Memcached, Memcached distributed across regions&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://rileyshen.github.io/images/system8.png&#34;
         alt=&#34;image&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;dns&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;how about it is not weibo but twitter, DAO is ten times larger then weibo?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;how to scale with high QPS problem&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Vertical Sharding vs Horizontal Sharding&lt;/p&gt;
&lt;p&gt;Vertical sharding :Vertical partitioning involves creating tables with fewer columns and using additional tables to store the remaining columns&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tiny URL only has two column, it doesn&amp;rsquo;t need vertical Sharding here&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;sharding-key&#34;&gt;Sharding Key&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-sharding-key&#34; name=&#34;sharding-key&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;one Long url mappting to multiple short url&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use Cache store all Lont to Short&lt;/li&gt;
&lt;li&gt;create short url for one long url, if Cache Miss happens, just create new short url&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;one Long url mappting to one short url&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use ramdon to generate Short Url
&lt;ul&gt;
&lt;li&gt;two table, one is Long to Short, one is Short to Long&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;base 62
&lt;ul&gt;
&lt;li&gt;Relational database only support auto increase id in one mathine&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- Sequential ID in multiple machines? --&gt;
&lt;!-- zookeeper, however, it is not recommend use Sequential ID in tiny url --&gt;
&lt;ul&gt;
&lt;li&gt;base62 sharding key
&lt;ul&gt;
&lt;li&gt;Hash(long_url) % 62 as Sharding key, put in short url column&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;old short key: AB1234&lt;/p&gt;
&lt;p&gt;now short key: Hash(long_url) % 62 + AB1234&lt;/p&gt;
&lt;p&gt;cons: the number of machine is not more than 62&lt;/p&gt;
&lt;h3 id=&#34;multi-region&#34;&gt;multi region&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-multi-region&#34; name=&#34;multi-region&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DB USE, UB CHINA&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To create a custom URL&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;random&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;shortKey&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;longUrl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a9exBl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wwww&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rileyshen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;just put custom url into shortkey&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;custom_url&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;longUrl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wwww&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rileyshen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;base62&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;shortKey&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;longUrl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a9exBl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wwww&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rileyshen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;shortKey&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;longUrl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                         &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;customUrl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a9exBl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wwww&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rileyshen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xxx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;adding a new column is not recommended, it will waste space.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;create a table store custom_url&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CustomURLTable&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;custom_url&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;longUrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wwww&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rileyshen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;create custom url (query and insert in CustomURLTable)&lt;/li&gt;
&lt;li&gt;create short url by long url
&lt;ul&gt;
&lt;li&gt;check whether CustomURLTable exist or not&lt;/li&gt;
&lt;li&gt;query and insert in URLTable&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;review&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;scenario：function need here&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;demand analysis：QPS and Storage&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;service：UrlService&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;data anylysis：SQL vs NoSQL&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;data anylysis：schema design&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Work Solution&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improve access efficiency between web server and data server&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Using caching to improve the efficiency of read requests&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Improve access efficiency between users and servers&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Solved the problem of slow access for Chinese users to US servers&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>learning System design as a landscape architect 5</title>
      <link>https://rileyshen.github.io/post/sys5/</link>
      <pubDate>Tue, 01 Mar 2022 15:56:39 +0800</pubDate>
      
      <guid>https://rileyshen.github.io/post/sys5/</guid>
      
        <description>&lt;p&gt;Rethink system design in a much fun way, as a former urban planner/landscape planner. Take Coupon System as example&lt;/p&gt;
&lt;!-- more --&gt;
&lt;!-- TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#coupon-system&#34; &gt;Coupon System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#whats-is-the-scenario-planning-of-this-project&#34; &gt;what&amp;amp;rsquo;s is the &amp;lt;strong&amp;gt;scenario&amp;lt;/strong&amp;gt; planning of this project&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#demand-analysis&#34; &gt;demand analysis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#service&#34; &gt;Service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#storage&#34; &gt;storage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#create-schema&#34; &gt;create schema&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#create-coupon&#34; &gt;create coupon&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#create-coupon-rule&#34; &gt;create coupon rule&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#create-coupon-batch&#34; &gt;create coupon-batch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#send-coupon&#34; &gt;send coupon&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#data-flow-when-users-are-no-more-than-10-k&#34; &gt;data flow when users are no more than 10 k&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#touch-system&#34; &gt;touch system&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#data-flow-when-users-are-more-than-thousands&#34; &gt;data flow when users are more than thousands&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#data-flow-in-asynchronous&#34; &gt;data flow in asynchronous&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#touch-system&#34; &gt;touch system&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#touch-system-when-users-are-more-than-10-million&#34; &gt;touch system when users are more than 10 Million&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#transaction&#34; &gt;transaction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#receive-coupon&#34; &gt;receive coupon&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#high-concurrency-cause-database-crash&#34; &gt;high concurrency cause database crash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#redis-data-verification&#34; &gt;Redis data verification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#redeem-coupon&#34; &gt;redeem coupon&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#confirm-the-order-page-and-verify-the-coupon&#34; &gt;Confirm the order page and verify the coupon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stage-and-system&#34; &gt;stage and system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#try-confirm-cancel&#34; &gt;Try-Confirm-Cancel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#scale&#34; &gt;Scale&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#expiring-coupon-reminder&#34; &gt;Expiring coupon reminder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#database-level-optimization&#34; &gt;Database level optimization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#send-coupon-interface-current-limit-protection&#34; &gt;send coupon interface current limit protection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#use-cache-aside-to-reduce-response-time&#34; &gt;use Cache Aside to reduce response time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#use-geolocation-to-reduce-response-time&#34; &gt;use geolocation to reduce response time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sharding-key&#34; &gt;Sharding Key&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multi-region&#34; &gt;multi region&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /TOC --&gt;
&lt;hr&gt;
&lt;p&gt;Problem-based learning to understand Coupon System.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.How to send coupons in bulk (100, 100k, 1million clients)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;2.How to prevent coupon oversale&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;3.How to set up a threshold discount&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;4.How to prevent users from repeatedly claiming coupons&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;coupon-system&#34;&gt;Coupon System&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-coupon-system&#34; name=&#34;coupon-system&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-whats-is-the-scenario-planning-of-this-project&#34;&gt;1. what&amp;rsquo;s is the &lt;strong&gt;scenario&lt;/strong&gt; planning of this project&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-what&#39;s-is-the-**scenario**-planning-of-this-project&#34; name=&#34;what&#39;s-is-the-**scenario**-planning-of-this-project&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.1 Send Coupons&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The operation of sending discount coupons is an asynchronous or synchronous operation?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;1.2 Receive coupons&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;specific groups of customers or every customers can get those coupons?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How many identical coupons can a user get?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Apply Coupons automatically or need customer&amp;rsquo;s request for the coupon codes?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;1.3 redeeming coupons&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;requirements for redeeming a coupon code&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;demand-analysis&#34;&gt;demand analysis&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-demand-analysis&#34; name=&#34;demand-analysis&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;retailers ：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create coupon&lt;/li&gt;
&lt;li&gt;send coupon&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;customers :&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;receive coupon&lt;/li&gt;
&lt;li&gt;place order&lt;/li&gt;
&lt;li&gt;redeem coupon&lt;/li&gt;
&lt;li&gt;purchase&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-service&#34;&gt;2 Service&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-service&#34; name=&#34;service&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gateway&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Payment Service
&lt;ul&gt;
&lt;li&gt;Payment DB&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Order Service
&lt;ul&gt;
&lt;li&gt;Order DB&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Coupon Service
&lt;ul&gt;
&lt;li&gt;Coupon DB&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Touch Service&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;storage&#34;&gt;storage&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-storage&#34; name=&#34;storage&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;assume:&lt;/p&gt;
&lt;p&gt;coupon_batch&lt;/p&gt;
&lt;p&gt;create a coupon_batch, send a conpon to a customer, serve to users are within a reasonable price range to help them meet the threshold for the discount.&lt;/p&gt;
&lt;p&gt;For example, if the in-cart value threshold to qualify for a discount is $100, can get a $10 off.&lt;/p&gt;
&lt;h3 id=&#34;create-schema&#34;&gt;create schema&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-create-schema&#34; name=&#34;create-schema&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;coupon_batch Table&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;explain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;batch_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;batch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ID&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;black&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;friday&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;batch_name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;batch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;bb&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupon_name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupon&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;aa&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rule_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rule&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1010&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;total_count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;total&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assign_count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assign&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5000&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;used_count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;used&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2500&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;rule Table&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;explain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rule_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rule_content&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;BLOB&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                         &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;rule content&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;{
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    threshold: 5
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    amount: 5
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    use_range: 3 
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    commodity_id: 10 
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    receive_count: 1 
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    is_mutex: true 
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    receive_started_at: 2020-11-1 00:08:00 
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    receive_ended_at: 2020-11-6 00:08:00 
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    use_started_at: 2020-11-1 00:00:00 
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    use_ended_at: 2020-11-11 11:59:59
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    }&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;coupon table&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;create-coupon&#34;&gt;create coupon&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-create-coupon&#34; name=&#34;create-coupon&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;create-coupon-rule&#34;&gt;create coupon rule&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-create-coupon-rule&#34; name=&#34;create-coupon-rule&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rule_content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;rule&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;create-coupon-batch&#34;&gt;create coupon-batch&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-create-coupon-batch&#34; name=&#34;create-coupon-batch&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupon&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;batch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupon_name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rule_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;total_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;aa&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1125&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;{
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    threshold: 100 
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    amount : 10
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    ......
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;    }&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;send-coupon&#34;&gt;send coupon&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-send-coupon&#34; name=&#34;send-coupon&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;data-flow-when-users-are-no-more-than-10-k&#34;&gt;data flow when users are no more than 10 k&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-data-flow-when-users-are-no-more-than-10-k&#34; name=&#34;data-flow-when-users-are-no-more-than-10-k&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://rileyshen.github.io/images/system9.png&#34;
         alt=&#34;image&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;send coupon&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h5 id=&#34;touch-system&#34;&gt;touch system&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-touch-system&#34; name=&#34;touch-system&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;touch system&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;text&lt;/li&gt;
&lt;li&gt;mail&lt;/li&gt;
&lt;li&gt;station letter&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;message table&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;explain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rec_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;is_read&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send_time&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATETIME&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;assume stores want to send message to their clients,  traverse the user table first, then insert the station messages into the message table of each users.&lt;/p&gt;
&lt;p&gt;If there are 100 users, a group message will need 100 insert operations&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;how about there more than thousands users in this user table, send station letter once would take up 10 MB space?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;data-flow-when-users-are-more-than-thousands&#34;&gt;data flow when users are more than thousands&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-data-flow-when-users-are-more-than-thousands&#34; name=&#34;data-flow-when-users-are-more-than-thousands&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;data-flow-in-asynchronous&#34;&gt;data flow in asynchronous&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-data-flow-in-asynchronous&#34; name=&#34;data-flow-in-asynchronous&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://rileyshen.github.io/images/system10.png&#34;
         alt=&#34;image&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;give out coupon&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;message oriented middleware&lt;/strong&gt;: when management server would sent request 100 k per second, and coupon server can only receive 10 k request, use message oriented middleware.&lt;/p&gt;
&lt;h5 id=&#34;touch-system-1&#34;&gt;touch system&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-touch-system&#34; name=&#34;touch-system&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;seperate one table into two tables, compared to insert 10 k operation, it only store once&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;message table&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;explain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rec_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foreigner&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;is_read&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;message_content table&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;explain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contend&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send_time&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATETIME&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;station letter steps:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;insert into message_content&lt;/li&gt;
&lt;li&gt;insert a record in every user&amp;rsquo;s message table to show there is a sation letter&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;how about there more than 10 Million users in this user table&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;touch-system-when-users-are-more-than-10-million&#34;&gt;touch system when users are more than 10 Million&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-touch-system-when-users-are-more-than-10-million&#34; name=&#34;touch-system-when-users-are-more-than-10-million&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;there will be only 20% active users, so insert the data to those active users&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;message table&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;explain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;formation&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rec_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;foreigner&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;is_read&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;message_content table&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;explain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                 &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;contend&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;send_time&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATETIME&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;station letter steps:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;insert text into message_content, don&amp;rsquo;t insert the record in every user&amp;rsquo;s message table&lt;/li&gt;
&lt;li&gt;after users log in, first query those in message_content but no recorded data in the message, which indicating that it is an unread station letter. When checking the content of the letter, inserting the relevant records into the into message table (it requires users log in)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;how to solve coupon oversale leading to Excessive load problem&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;transaction&#34;&gt;transaction&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-transaction&#34; name=&#34;transaction&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The operation provides user files that meet the conditions, upload them to the coupon issuance management background and select the ones to be sent.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The management server generates a message according to the &lt;strong&gt;user ID&lt;/strong&gt; and &lt;strong&gt;coupon batch ID&lt;/strong&gt;, and sends it to the message middleware&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Coupon server receive message&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupon_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;batch_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupon_batch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SET&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;total_count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;total_count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assign_count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assign_count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;batch_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;total_count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Each transaction must succeed or fail as a complete unit&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;receive-coupon&#34;&gt;receive coupon&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-receive-coupon&#34; name=&#34;receive-coupon&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://rileyshen.github.io/images/system11.png&#34;
         alt=&#34;image&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;receive coupon&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;ol&gt;
&lt;li&gt;Check coupon balance&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;total_count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupon_batch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;batch_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Added coupon user table to deduct the balance&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;INSERT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;INTO&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupon_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;batch_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;VALUES&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;XX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;UPDATE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupon_batch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SET&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;total_count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;total_count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assign_count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;assign_count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;batch_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;total_count&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Each transaction must succeed or fail as a complete unit&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;high-concurrency-cause-database-crash&#34;&gt;high concurrency cause database crash&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-high-concurrency-cause-database-crash&#34; name=&#34;high-concurrency-cause-database-crash&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It would actually be situations similar to flash sale.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;four step to slove those problem:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;high concurrency cause database crash&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;cache warm up&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;under high concurrency Large amount of cache release crash the database&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;message queue deal with it asynchronous&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;How to prevent users from repeatedly claiming more coupon?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;redis-data-verification&#34;&gt;Redis data verification&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-redis-data-verification&#34; name=&#34;redis-data-verification&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;check Cache before claim coupon
&lt;strong&gt;SISMEMBER KEY VALUE&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;SISMEMBER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;batch_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;claim coupon&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;update Cache
&lt;strong&gt;SADD KEY VALUE1&amp;hellip;VALUEN&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;SADD&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;batch_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;redeem-coupon&#34;&gt;redeem coupon&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-redeem-coupon&#34; name=&#34;redeem-coupon&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;confirm-the-order-page-and-verify-the-coupon&#34;&gt;Confirm the order page and verify the coupon&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-confirm-the-order-page-and-verify-the-coupon&#34; name=&#34;confirm-the-order-page-and-verify-the-coupon&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;whether it has expired&lt;/li&gt;
&lt;li&gt;the scope of application&lt;/li&gt;
&lt;li&gt;whether the threshold is reached&lt;/li&gt;
&lt;li&gt;if mutually exclusive&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;&lt;img src=&#34;https://rileyshen.github.io/images/system12.png&#34;
         alt=&#34;image&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;receive coupon&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;return available coupon&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;batch_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupon&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;AND&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rule_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupon_batch&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;batch_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;SELECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rule_content&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;rule&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WHERE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rule_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;choose available coupon, return the result&lt;/p&gt;
&lt;h3 id=&#34;stage-and-system&#34;&gt;stage and system&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-stage-and-system&#34; name=&#34;stage-and-system&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;confirm order &amp;ndash; coupon system&lt;/li&gt;
&lt;li&gt;submit &amp;ndash; coupon system + order system&lt;/li&gt;
&lt;li&gt;pay &amp;ndash; coupon system + order system + payment system&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;use Distributed Transaction Try-Confirm-Cancel&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;TCC is a compensating transaction pattern for business model that is two-phased. try phase puts a service in pending state. For example, a try request in our flight booking service will reserve a seat for the customer and insert a customer reservation record with reserved state into database.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Coupon_opt_record Table&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;explain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                         &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                             &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupon_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupon&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                           &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;operating&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;--lock, 1--cancel, 2--unlock       0
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;operated_at&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;DATETIME&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;operate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                        &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2022&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;01&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;try-confirm-cancel&#34;&gt;Try-Confirm-Cancel&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-try-confirm-cancel&#34; name=&#34;try-confirm-cancel&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Try&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;try phase puts a service in pending state. For example, a try request in our flight booking service will reserve a seat for the customer and insert a customer reservation record with reserved state into database. If any service fails to make a reservation or times out, the coordinator will send a cancel request in the next phase&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;confirm&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;moves the service to confirmed state. A confirm request will confirm that a seat is booked for the customer and he or she will be billed. The customer reservation record in database will be updated to confirmed state. If any service fails to confirm or times out, the coordinator will either retry confirmation until success or involve manual intervention after it retries a certain number of times.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cance&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In case of payment failure/, or in the case of payment failure, cancel the order to execute the business operation, cancel the business resource of executing the order, change the coupon status to &amp;ldquo;unused&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;scale&#34;&gt;Scale&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-scale&#34; name=&#34;scale&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;expiring-coupon-reminder&#34;&gt;Expiring coupon reminder&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-expiring-coupon-reminder&#34; name=&#34;expiring-coupon-reminder&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Scan the coupon table regularly.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;disadvantages: a Scan operation on large tableS takeS an excessive amount of time and cause performance problems.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;delayed messages&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;disadvantages: Some coupons are valid for too long (30 days) or more, cause a serious message backlog in the current queue&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Add a notification table&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Advantages: small amount of scanned data and high efficiency, delete is_read records.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Notify_msg Tab&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;column&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;explain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                 &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;example&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;auto&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;increme&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1100&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;coupon_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;           &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;BIGINT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;              
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;user_id&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;BIGINT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;notify_day&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;notify_type&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;notify_time&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;k&#34;&gt;TIMESTAMP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;INTEGER&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;hen creating a coupon, insert the record into notify_msg&lt;/li&gt;
&lt;li&gt;Set user ID + batch ID + notification date as a unique index to prevent duplicates record notifications.&lt;/li&gt;
&lt;li&gt;Establish notify_time index, queried through this index column to improve query efficiency&lt;/li&gt;
&lt;li&gt;After the notification is completed, delete the data&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;database-level-optimization&#34;&gt;Database level optimization&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-database-level-optimization&#34; name=&#34;database-level-optimization&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;batch_table index : batch_id&lt;/p&gt;
&lt;p&gt;coupon table index: coupon_id + user_id + batch_id + order_id&lt;/p&gt;
&lt;h3 id=&#34;send-coupon-interface-current-limit-protection&#34;&gt;send coupon interface current limit protection&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-send-coupon-interface-current-limit-protection&#34; name=&#34;send-coupon-interface-current-limit-protection&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;frontend current limiting&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;after clicking, the buttom becomes gray&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;backend current limiting&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;some request would lead to busy page&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;use-cache-aside-to-reduce-response-time&#34;&gt;use Cache Aside to reduce response time&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-use-cache-aside-to-reduce-response-time&#34; name=&#34;use-cache-aside-to-reduce-response-time&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;data in Cache&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;long to short (generate new short url)&lt;/li&gt;
&lt;li&gt;short to long (query short url)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure&gt;&lt;img src=&#34;https://rileyshen.github.io/images/system7.png&#34;
         alt=&#34;image&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;Cache Aside&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&#34;use-geolocation-to-reduce-response-time&#34;&gt;use geolocation to reduce response time&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-use-geolocation-to-reduce-response-time&#34; name=&#34;use-geolocation-to-reduce-response-time&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Optimize server access speed
• Different regions, use different web servers
• Resolve users in different regions to different servers through DNS&lt;/p&gt;
&lt;p&gt;Optimize data access speed
• Use Centralized MySQL+Distributed Memcached
• One MySQL with multiple Memcached, Memcached distributed across regions&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://rileyshen.github.io/images/system8.png&#34;
         alt=&#34;image&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;dns&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;how about it is not weibo but twitter, DAO is ten times larger then weibo?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;how to scale with high QPS problem&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Vertical Sharding vs Horizontal Sharding&lt;/p&gt;
&lt;p&gt;Vertical sharding :Vertical partitioning involves creating tables with fewer columns and using additional tables to store the remaining columns&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tiny URL only has two column, it doesn&amp;rsquo;t need vertical Sharding here&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;sharding-key&#34;&gt;Sharding Key&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-sharding-key&#34; name=&#34;sharding-key&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;one Long url mappting to multiple short url&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use Cache store all Lont to Short&lt;/li&gt;
&lt;li&gt;create short url for one long url, if Cache Miss happens, just create new short url&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;one Long url mappting to one short url&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;use ramdon to generate Short Url
&lt;ul&gt;
&lt;li&gt;two table, one is Long to Short, one is Short to Long&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;base 62
&lt;ul&gt;
&lt;li&gt;Relational database only support auto increase id in one mathine&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- Sequential ID in multiple machines? --&gt;
&lt;!-- zookeeper, however, it is not recommend use Sequential ID in tiny url --&gt;
&lt;ul&gt;
&lt;li&gt;base62 sharding key
&lt;ul&gt;
&lt;li&gt;Hash(long_url) % 62 as Sharding key, put in short url column&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;old short key: AB1234&lt;/p&gt;
&lt;p&gt;now short key: Hash(long_url) % 62 + AB1234&lt;/p&gt;
&lt;p&gt;cons: the number of machine is not more than 62&lt;/p&gt;
&lt;h3 id=&#34;multi-region&#34;&gt;multi region&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-multi-region&#34; name=&#34;multi-region&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DB USE, UB CHINA&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To create a custom URL&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;random&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;shortKey&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;longUrl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a9exBl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wwww&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rileyshen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;just put custom url into shortkey&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;custom_url&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;longUrl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wwww&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rileyshen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;base62&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;shortKey&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;longUrl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a9exBl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wwww&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rileyshen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;shortKey&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;longUrl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                         &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;customUrl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a9exBl&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wwww&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rileyshen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xxx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;adding a new column is not recommended, it will waste space.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;create a table store custom_url&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CustomURLTable&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;custom_url&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;longUrl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;//&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wwww&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rileyshen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;com&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;create custom url (query and insert in CustomURLTable)&lt;/li&gt;
&lt;li&gt;create short url by long url
&lt;ul&gt;
&lt;li&gt;check whether CustomURLTable exist or not&lt;/li&gt;
&lt;li&gt;query and insert in URLTable&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;review&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.How to send coupons in bulk (100, 100k, 1million clients)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;sending coupons&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;100 &amp;ndash; syn, touch system(1 table)
100 k &amp;ndash; asyn, Message Oriented Middleware, touch system(2 table)
1 million&amp;ndash; asyn, Message Oriented Middleware, touch system(active users, need log in, search in messate content table first, then insert the message into message table)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2.How to prevent coupon oversale&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;scenario：function need here&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;demand analysis：QPS and Storage&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;service：UrlService&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;data anylysis：SQL vs NoSQL&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;data anylysis：schema design&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Work Solution&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Improve access efficiency between web server and data server&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Using caching to improve the efficiency of read requests&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Improve access efficiency between users and servers&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Solved the problem of slow access for Chinese users to US servers&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>learning System design as a landscape architect 6</title>
      <link>https://rileyshen.github.io/post/sys6/</link>
      <pubDate>Tue, 01 Mar 2022 15:56:39 +0800</pubDate>
      
      <guid>https://rileyshen.github.io/post/sys6/</guid>
      
        <description>&lt;p&gt;Rethink system design in a much fun way, as a former urban planner/landscape planner. Take Scale and Distributed File System Desig as example&lt;/p&gt;
&lt;!-- more --&gt;
&lt;!-- TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#problem-based-learning-to-understand-scale&#34; &gt;Problem-based learning to understand SCALE&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#mysql-replica&#34; &gt;MySQL Replica&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#master-slave-replica&#34; &gt;Master Slave Replica&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#write-ahead-log&#34; &gt;Write Ahead Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#what-if-the-master-crash&#34; &gt;What if the Master crash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#nosql-replica&#34; &gt;NoSQL Replica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sql-vs-nosql&#34; &gt;SQL vs NoSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#user-table-sharding&#34; &gt;User Table Sharding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#friendship-table-sharding&#34; &gt;Friendship Table Sharding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sessopm-table-sharding&#34; &gt;Sessopm Table Sharding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#news-feed--timeline-sharding&#34; &gt;News Feed / Timeline Sharding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#leetcode-submission-sharding&#34; &gt;leetcode Submission Sharding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#problem-based-learning-to-understand-distributed-file-system&#34; &gt;Problem-based learning to understand Distributed File System&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#scenario-analysis&#34; &gt;Scenario analysis&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#basic-function&#34; &gt;basic function&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#service-analysis&#34; &gt;Service analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stroage&#34; &gt;Stroage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#how-to-design-gfs-global-file-system&#34; &gt;How to design GFS Global File System&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#how-to-write-a-file&#34; &gt;how to write a file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#how-to-modify-the-written-file&#34; &gt;how to modify the written file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#how-to-read-a-file&#34; &gt;how to read a file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#master-task&#34; &gt;Master Task&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#one-work-solution&#34; &gt;One Work Solution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#how-to-identify-whether-a-chunk-on-the-disk-is-broken&#34; &gt;How to identify whether a chunk on the disk is broken&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#how-to-avoid-chunk-data-loss-when-a-chunkserver-is-down&#34; &gt;How to avoid chunk data loss when a ChunkServer is down&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#design-a-lookup-service&#34; &gt;Design a lookup service&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#senorio&#34; &gt;senorio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#service&#34; &gt;service&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /TOC --&gt;
&lt;hr&gt;
&lt;h2 id=&#34;problem-based-learning-to-understand-scale&#34;&gt;Problem-based learning to understand SCALE&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-problem-based-learning-to-understand-scale&#34; name=&#34;problem-based-learning-to-understand-scale&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.How to scale system ≈ How to scale database&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;2.single point failure&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;3.Replica (3 times)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;4.Vertical Sharding (cons: massive data and QPS with few column)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Consistent Hashing&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;0 - 2^64 - 1 &amp;ndash;&amp;gt; large Ring&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Virtual Node&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;mysql-replica&#34;&gt;MySQL Replica&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-mysql-replica&#34; name=&#34;mysql-replica&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;master-slave-replica&#34;&gt;Master Slave Replica&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-master-slave-replica&#34; name=&#34;master-slave-replica&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;write-ahead-log&#34;&gt;Write Ahead Log&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-write-ahead-log&#34; name=&#34;write-ahead-log&#34;&gt;&lt;/a&gt;
• Any operation of the SQL database will be recorded in the form of &lt;strong&gt;Log&lt;/strong&gt;
• For example, data A is changed from C to D at time B
• After the slave is activated, tell the master that I am there
• &lt;strong&gt;The master notifies the slave to read the log every time there is any operation&lt;/strong&gt;
• So the data on the slave is &amp;ldquo;delayed&amp;rdquo;&lt;/p&gt;
&lt;h5 id=&#34;what-if-the-master-crash&#34;&gt;What if the Master crash&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-what-if-the-master-crash&#34; name=&#34;what-if-the-master-crash&#34;&gt;&lt;/a&gt;
• Upgrade a Slave to Master, accept read+write
• There may be some degree of data loss and inconsistency&lt;/p&gt;
&lt;h3 id=&#34;nosql-replica&#34;&gt;NoSQL Replica&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-nosql-replica&#34; name=&#34;nosql-replica&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cassandra : data is stored &amp;ldquo;clockwise&amp;rdquo; in three virtual groups on the Consistent hashing ring
in nodes&lt;/p&gt;
&lt;h3 id=&#34;sql-vs-nosql&#34;&gt;SQL vs NoSQL&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-sql-vs-nosql&#34; name=&#34;sql-vs-nosql&#34;&gt;&lt;/a&gt;
The &amp;ldquo;auto&amp;rdquo; Replica method is the Master Slave
The &amp;ldquo;manual&amp;rdquo; Replica method can also deposit three copies clockwise on the Consistent Hashing ring&lt;/p&gt;
&lt;p&gt;The &amp;ldquo;auto&amp;rdquo; Replica way is to store three copies clockwise on the Consistent Hashing ring
The &amp;ldquo;manual&amp;rdquo; Replica way: No need to do it manually&lt;/p&gt;
&lt;h3 id=&#34;user-table-sharding&#34;&gt;User Table Sharding&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-user-table-sharding&#34; name=&#34;user-table-sharding&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SQL data &amp;ndash; &amp;gt; User Table&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How to shard data based on how to query data&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;select * from user_table where user_id=xxx&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;use user_id&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;After User Table Sharding, what if multiple databases cannot maintain a global auto-increment ID?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Manually create a UUID as the user&amp;rsquo;s user_id&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;When a user is created, there is no user_id of the user, which database to create this user?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Web Server is responsible for creating the user&amp;rsquo;s UUID as user_id&lt;/li&gt;
&lt;li&gt;After creation, obtain the entity database information based on the result of consistent_hash(user_id)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;what if the User Table has used auto-incrementing IDs before sharding?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;UUID is usually a string, and the auto-incrementing id is an integer, which is not compatible&lt;/li&gt;
&lt;li&gt;A separate global UserIdService is used to create a new user IDs, record the maximum value of the current UserId, increasing + 1 everytime. It would ensure the atomicity of data operations (Atomic).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;friendship-table-sharding&#34;&gt;Friendship Table Sharding&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-friendship-table-sharding&#34; name=&#34;friendship-table-sharding&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;direacted: to_userid&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;undirected friendship: need store 2 datas, use a as sharding key, and use b as sharding key&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;sessopm-table-sharding&#34;&gt;Sessopm Table Sharding&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-sessopm-table-sharding&#34; name=&#34;sessopm-table-sharding&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;session_key&lt;/strong&gt; as sharding key&lt;/p&gt;
&lt;h3 id=&#34;news-feed--timeline-sharding&#34;&gt;News Feed / Timeline Sharding&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-news-feed-%2F-timeline-sharding&#34; name=&#34;news-feed-%2F-timeline-sharding&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;user_id&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;leetcode-submission-sharding&#34;&gt;leetcode Submission Sharding&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-leetcode-submission-sharding&#34; name=&#34;leetcode-submission-sharding&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;demand1： query certain question submit records&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;select * from submission_table where problem_id=100;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;demand2: query certain user submit records&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;select * from submission_table where user_id=101;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;how to meet two demands? since NoSQL is not support multi-index&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;use user_id as sharding key in the submission_table&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;create the second table, store all the submission of certain question&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;table contains &amp;ldquo;problem_id, submission_id&amp;hellip;&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;use problem_id as sharding key&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;problem-based-learning-to-understand-distributed-file-system&#34;&gt;Problem-based learning to understand Distributed File System&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-problem-based-learning-to-understand-distributed-file-system&#34; name=&#34;problem-based-learning-to-understand-distributed-file-system&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;scenario-analysis&#34;&gt;Scenario analysis&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-scenario-analysis&#34; name=&#34;scenario-analysis&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;basic-function&#34;&gt;basic function&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-basic-function&#34; name=&#34;basic-function&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;function 1&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;user read and write file&lt;/li&gt;
&lt;li&gt;the size of files&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;function 2&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;how many machines needed to store those files&lt;/li&gt;
&lt;li&gt;the numbers of the mathines&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;service-analysis&#34;&gt;Service analysis&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-service-analysis&#34; name=&#34;service-analysis&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Client&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Server&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Server: Master-Slave&lt;/p&gt;
&lt;h3 id=&#34;stroage&#34;&gt;Stroage&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-stroage&#34; name=&#34;stroage&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;how-to-design-gfs-global-file-system&#34;&gt;How to design GFS (Global File System)&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-how-to-design-gfs-global-file-system&#34; name=&#34;how-to-design-gfs-global-file-system&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How to save a file in one machine? (100 G)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Metadata&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;File info&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Name=xxx.mp4&lt;/li&gt;
&lt;li&gt;CreatedTime=xxxxx&lt;/li&gt;
&lt;li&gt;Size=aaaaa&lt;/li&gt;
&lt;li&gt;index&lt;/li&gt;
&lt;li&gt;Block 11 -&amp;gt; diskOffset1&lt;/li&gt;
&lt;li&gt;Block 12 -&amp;gt; diskOffset2&lt;/li&gt;
&lt;li&gt;Block 13 -&amp;gt; diskOffset3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;1 block = 4096Byte&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How to save a file in one machine? (100 T)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;1 block = 64M = 64 * 1024k&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Advantage&lt;/strong&gt;
• Reduce size of metadata
• Reduce traffic&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Disadvantage&lt;/strong&gt;
• Waste space for small files&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Metadata&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;File info&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Name=xxx.mp4&lt;/li&gt;
&lt;li&gt;CreatedTime=xxxxx&lt;/li&gt;
&lt;li&gt;Size=aaaaa&lt;/li&gt;
&lt;li&gt;index&lt;/li&gt;
&lt;li&gt;Chunk 11 -&amp;gt; diskOffset1&lt;/li&gt;
&lt;li&gt;Chunk 12 -&amp;gt; diskOffset2&lt;/li&gt;
&lt;li&gt;Chunk 13 -&amp;gt; diskOffset3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;How to save extra-large file in several machine (10P)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;One master + many ChunkSer&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Slave Servers = Chunk Servers&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Advantage&lt;/strong&gt;
• Reduce size of metadata
• Reduce traffic&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Disadvantage&lt;/strong&gt;
• Waste space for small files&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Metadata&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;File info&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Name=xxx.mp4&lt;/li&gt;
&lt;li&gt;CreatedTime=xxxxx&lt;/li&gt;
&lt;li&gt;Size=aaaaa&lt;/li&gt;
&lt;li&gt;index&lt;/li&gt;
&lt;li&gt;Chunk 11 -&amp;gt; diskOffset1&lt;/li&gt;
&lt;li&gt;Chunk 12 -&amp;gt; diskOffset2&lt;/li&gt;
&lt;li&gt;Chunk 13 -&amp;gt; diskOffset3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;improve the performance&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;The master don’t record the diskOffset of a chunk&lt;/strong&gt;
Advantage&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Reduce the size of metadata in master&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reduce the traffic between master and ChunkServer (chunk offset change won&amp;rsquo;t notify the master)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Metadata&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;File info&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Name=xxx.mp4&lt;/li&gt;
&lt;li&gt;CreatedTime=xxxxx&lt;/li&gt;
&lt;li&gt;Size=aaaaa&lt;/li&gt;
&lt;li&gt;index&lt;/li&gt;
&lt;li&gt;Chunk 11 -&amp;gt; cs3&lt;/li&gt;
&lt;li&gt;Chunk 12 -&amp;gt; cs3&lt;/li&gt;
&lt;li&gt;Chunk 13 -&amp;gt; cs4&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;How much space to store 10P big file in metadata&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1 chunk = 64MB needs 64B&lt;/p&gt;
&lt;p&gt;10P needs 10G&lt;/p&gt;
&lt;h3 id=&#34;how-to-write-a-file&#34;&gt;how to write a file&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-how-to-write-a-file&#34; name=&#34;how-to-write-a-file&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;client &amp;ndash;&amp;gt; write File_name=/xxxx.mp4, Chunk index=1 &amp;ndash;&amp;gt; master&lt;/p&gt;
&lt;p&gt;master &amp;ndash;&amp;gt; Assign Chunkserver_locations=US, CS1 &amp;mdash;&amp;gt; client&lt;/p&gt;
&lt;p&gt;client &amp;ndash;&amp;gt; transfer data=/xxxx.mp4, Chunk index=1 &amp;ndash;&amp;gt; chunkServer1&lt;/p&gt;
&lt;p&gt;chunkServer1 &amp;ndash;&amp;gt; write finish&lt;/p&gt;
&lt;h3 id=&#34;how-to-modify-the-written-file&#34;&gt;how to modify the written file&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-how-to-modify-the-written-file&#34; name=&#34;how-to-modify-the-written-file&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;delete the file, then rewrite the file&lt;/p&gt;
&lt;h3 id=&#34;how-to-read-a-file&#34;&gt;how to read a file&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-how-to-read-a-file&#34; name=&#34;how-to-read-a-file&#34;&gt;&lt;/a&gt;
Split a file into multiple chunks to read&lt;/p&gt;
&lt;p&gt;client &amp;ndash;&amp;gt;  File_name=/xxxx.mp4 &amp;ndash;&amp;gt; master&lt;/p&gt;
&lt;p&gt;master &amp;ndash;&amp;gt; return a chunk list &amp;mdash;&amp;gt; client&lt;/p&gt;
&lt;p&gt;client &amp;ndash;&amp;gt; Read /xxxx.mp4 in chunkServer1 &amp;ndash;&amp;gt; chunkServer1&lt;/p&gt;
&lt;p&gt;chunkServer1 &amp;ndash;&amp;gt; Return data /xxxx.mp4-00-of-09&lt;/p&gt;
&lt;h3 id=&#34;master-task&#34;&gt;Master Task&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-master-task&#34; name=&#34;master-task&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Store each file&amp;rsquo;s metadata&lt;/li&gt;
&lt;li&gt;Store Map(file name + chunk index -&amp;gt; chunk server)
&lt;ul&gt;
&lt;li&gt;Find the corresponding chunkserver when reading&lt;/li&gt;
&lt;li&gt;Allocate free chunkservers when writing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;one-work-solution&#34;&gt;One Work Solution&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-one-work-solution&#34; name=&#34;one-work-solution&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;storage
&lt;ul&gt;
&lt;li&gt;Ordinary file system Meta Data, Block&lt;/li&gt;
&lt;li&gt;Large file storage: Block-&amp;gt; Chunk&lt;/li&gt;
&lt;li&gt;Large files on multiple machines: Chunk Server + Master&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;write
&lt;ul&gt;
&lt;li&gt;Master + Client + ChunkServer communication process&lt;/li&gt;
&lt;li&gt;Master maintains metadata and chunkserver tables&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;read
&lt;ul&gt;
&lt;li&gt;Master + Client + ChunkServer communication process&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;how-to-identify-whether-a-chunk-on-the-disk-is-broken&#34;&gt;How to identify whether a chunk on the disk is broken&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-how-to-identify-whether-a-chunk-on-the-disk-is-broken&#34; name=&#34;how-to-identify-whether-a-chunk-on-the-disk-is-broken&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;use &lt;strong&gt;CheckSum&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;how-to-avoid-chunk-data-loss-when-a-chunkserver-is-down&#34;&gt;How to avoid chunk data loss when a ChunkServer is down&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-how-to-avoid-chunk-data-loss-when-a-chunkserver-is-down&#34; name=&#34;how-to-avoid-chunk-data-loss-when-a-chunkserver-is-down&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Repica&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Master-Slave&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Storage
&lt;ul&gt;
&lt;li&gt;Save a file in one machine -&amp;gt; a big file in one machine -&amp;gt; a extra big file in multi-machine&lt;/li&gt;
&lt;li&gt;Multi-machine
&lt;ul&gt;
&lt;li&gt;How to use the master&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;How to traffic and storage of master?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Read
&lt;ul&gt;
&lt;li&gt;The process of reading a file&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Write:
&lt;ul&gt;
&lt;li&gt;The process of writing a file&lt;/li&gt;
&lt;li&gt;How to reduce master traffic?
&lt;ul&gt;
&lt;li&gt;Client and Chunk Server coummunicate&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;How to reduce client traffic?
&lt;ul&gt;
&lt;li&gt;Leader Election&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Failure and Recover (key)
&lt;ul&gt;
&lt;li&gt;Discover the failure a chunk?
&lt;ul&gt;
&lt;li&gt;Check Sum&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Avoid the failure a chunk?
&lt;ul&gt;
&lt;li&gt;Replica&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Recover the failure?
&lt;ul&gt;
&lt;li&gt;Ask master&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Discover the failure of the chunkserver?
&lt;ul&gt;
&lt;li&gt;Heart Beat (chunkservers-&amp;gt;master)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Solve the failure of writing ChunkServer?
&lt;ul&gt;
&lt;li&gt;etry&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;design-a-lookup-service&#34;&gt;Design a lookup service&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-design-a-lookup-service&#34; name=&#34;design-a-lookup-service&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;10 Billion key-value pair in this system, when the user enter the key, it return its value. Each key size is 0.1KB, each value is 1kb. Required QPS &amp;gt;= 5000, latency &amp;lt; 200ms&lt;/p&gt;
&lt;p&gt;Server Parameters need to know:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;commodity server&lt;/li&gt;
&lt;li&gt;8x cpu cores on each server&lt;/li&gt;
&lt;li&gt;32 G memory&lt;/li&gt;
&lt;li&gt;6T disk&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;solution step1: calcution&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;total key size 1 TB&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;total value size 10T&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;with 6T disk, a server with two disks will be enough (12T)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1TB = 1024 GB ~ 1000 GB, 40 servers can store the whole keys.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;step2:  Find out the server location of the key&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For every request, 1 value, which is 1KB needs to be returned&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;total time for reading one value would be 10ms(disk seek) + 1KB/1MB * 30MS (reading 1kb sequentially form disk) ~ 10ms&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;add a location mapping, one is 8 bite, so the size of key + location ~ 1KB&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;40 servers can store &amp;lt;key, disk-address&amp;gt; pairs in its memory (1TB memory size as a whole)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;binary search 30 times on memory, which can be ignored&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;total latency is 10 + 0.5 = 10.5 ms&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;step3: solve 5000 QPS demand&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;40 servers, each machine has 2 disk, one disk support for 100 times search, each server can support 200 operation.&lt;/li&gt;
&lt;li&gt;total QPS = 200 * 40 = 8000 &amp;gt; 5000&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;senorio&#34;&gt;senorio&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-senorio&#34; name=&#34;senorio&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;function demand:
search, read&lt;/p&gt;
&lt;p&gt;qps &amp;gt;= 5000&lt;/p&gt;
&lt;p&gt;read:&lt;/p&gt;
&lt;h3 id=&#34;service&#34;&gt;service&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-service&#34; name=&#34;service&#34;&gt;&lt;/a&gt;
QPS&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>learning System design as a landscape architect 7</title>
      <link>https://rileyshen.github.io/post/sys7/</link>
      <pubDate>Tue, 01 Mar 2022 15:56:39 +0800</pubDate>
      
      <guid>https://rileyshen.github.io/post/sys7/</guid>
      
        <description>&lt;p&gt;Rethink system design in a much fun way, as a former urban planner/landscape planner. Take Collaborative Editing System as example&lt;/p&gt;
&lt;!-- more --&gt;
&lt;!-- TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#collaborative-editing-system&#34; &gt;Collaborative Editing System&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#scenario-analysis&#34; &gt;Scenario analysis&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#basic-function&#34; &gt;basic function&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#http-10&#34; &gt;HTTP 1.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#http-11&#34; &gt;HTTP 1.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#websocket&#34; &gt;WebSocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#service-analysis&#34; &gt;Service analysis&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#request-files&#34; &gt;request files&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#url-design&#34; &gt;URL design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#simple-file-request-process&#34; &gt;simple file request process&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#save-files&#34; &gt;save files&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#metadata--content&#34; &gt;Metadata &amp;amp;amp; Content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#file-operation&#34; &gt;file operation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#save-struture&#34; &gt;save struture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lru-cache&#34; &gt;LRU CACHE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#why-doubly-linked-list&#34; &gt;why doubly linked list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#how-to-convert-the-file-into-a-linked-list&#34; &gt;How to convert the file into a linked list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#modify-content&#34; &gt;modify content&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#edit-files&#34; &gt;edit files&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#create-file-data-flow&#34; &gt;create file data flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#edit-file-data-flow&#34; &gt;edit file data flow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#table&#34; &gt;Table&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#add-new-row&#34; &gt;add new row&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#modify-new-col&#34; &gt;modify new col&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#collaborative-editin&#34; &gt;Collaborative Editin&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#display-avatars-edited-by-multiple-people-at-the-same-time&#34; &gt;display avatars edited by multiple people at the same time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#display-avater-data-flow&#34; &gt;display avater data flow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#display-who-is-editing-the-row&#34; &gt;display who is editing the row&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /TOC --&gt;
&lt;hr&gt;
&lt;h2 id=&#34;collaborative-editing-system&#34;&gt;Collaborative Editing System&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-collaborative-editing-system&#34; name=&#34;collaborative-editing-system&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Google Docs&lt;/p&gt;
&lt;h3 id=&#34;scenario-analysis&#34;&gt;Scenario analysis&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-scenario-analysis&#34; name=&#34;scenario-analysis&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;basic-function&#34;&gt;basic function&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-basic-function&#34; name=&#34;basic-function&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;What is the main function of documentation editor(word)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;New/Load File&lt;/li&gt;
&lt;li&gt;Edit File&lt;/li&gt;
&lt;li&gt;Save File&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;What is the main function of Collaborative Editor (Google Docs)&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Collaboration&lt;/li&gt;
&lt;li&gt;Display Co-Authoring&lt;/li&gt;
&lt;li&gt;Who updat&lt;/li&gt;
&lt;li&gt;Content lock&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;http-10&#34;&gt;HTTP 1.0&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-http-1.0&#34; name=&#34;http-1.0&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;don&amp;rsquo;t support Long Connection
&lt;ul&gt;
&lt;li&gt;Three-way Hand&lt;/li&gt;
&lt;li&gt;Slow Star&lt;/li&gt;
&lt;li&gt;TCP Connection&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Head of Line Blocking&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;http-11&#34;&gt;HTTP 1.1&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-http-1.1&#34; name=&#34;http-1.1&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dsupport Long Connection
&lt;ul&gt;
&lt;li&gt;one TCP Connection: mutiple Request + Response&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pipeline&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Neither HTTP1.0 nor HTTP1.1 can send data from the server to the client.&lt;/p&gt;
&lt;p&gt;WebSocket can communicate in both directions (server and client).&lt;/p&gt;
&lt;h3 id=&#34;websocket&#34;&gt;WebSocket&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-websocket&#34; name=&#34;websocket&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;build up connection&lt;/li&gt;
&lt;li&gt;keep the session&lt;/li&gt;
&lt;li&gt;update the content&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Features&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support two-way communication&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Strong real-time performance
The server actively sends requests to the client, which solves the real-time problem&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;stock system&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;service-analysis&#34;&gt;Service analysis&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-service-analysis&#34; name=&#34;service-analysis&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;request-files&#34;&gt;request files&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-request-files&#34; name=&#34;request-files&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;url-design&#34;&gt;URL design&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-url-design&#34; name=&#34;url-design&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You cannot use &lt;code&gt;http://xxx.com/aa/bb/cc.mp4&lt;/code&gt; when sharing this file, because of safty reason and the links is too long for sharing.&lt;/p&gt;
&lt;p&gt;Generate a unique key or uuid for each file.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://xxx.com/avbnjnciej&#34;&gt;http://xxx.com/avbnjnciej&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;improve the readability&lt;/p&gt;
&lt;p&gt;add file slugify string as suffix&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://xxx.com/avbnjnciej/collaborative-editing&#34;&gt;http://xxx.com/avbnjnciej/collaborative-editing&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;simple-file-request-process&#34;&gt;simple file request process&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-simple-file-request-process&#34; name=&#34;simple-file-request-process&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Clint&lt;/strong&gt; &amp;ndash;1. Request URL &amp;ndash;&amp;gt; &lt;strong&gt;Web Server&lt;/strong&gt; &amp;ndash; 2. Locate File &amp;ndash;&amp;gt; &lt;strong&gt;File System&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;File System&lt;/strong&gt; &amp;ndash;3. Get File &amp;ndash;&amp;gt; &lt;strong&gt;Web Server&lt;/strong&gt; &amp;ndash; 4. Response &amp;ndash;&amp;gt; &lt;strong&gt;Clint&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;save-files&#34;&gt;save files&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-save-files&#34; name=&#34;save-files&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;metadata--content&#34;&gt;Metadata &amp;amp; Content&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-metadata-%26-content&#34; name=&#34;metadata-%26-content&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Metadata &amp;ndash;&amp;gt; DB
&lt;ul&gt;
&lt;li&gt;key&lt;/li&gt;
&lt;li&gt;filename&lt;/li&gt;
&lt;li&gt;size
&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Content &amp;ndash;&amp;gt; File System&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;file-operation&#34;&gt;file operation&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-file-operation&#34; name=&#34;file-operation&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;basic file operation: CRUD&lt;/p&gt;
&lt;p&gt;Granularity: what if take the whole file as Granularity?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;improve:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;use a row as Granularity,&lt;/p&gt;
&lt;p&gt;use a word as Granularity: google docs&lt;/p&gt;
&lt;h5 id=&#34;save-struture&#34;&gt;save struture&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-save-struture&#34; name=&#34;save-struture&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h5 id=&#34;lru-cache&#34;&gt;LRU CACHE&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-lru-cache&#34; name=&#34;lru-cache&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;conbine quick search(hashset) and quick insert/remove (LinkedNode)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If we add elements from the tail of the linked list by default, then obviously the elements closer to the tail are the most recently used, and the elements closer to the head are the ones that have not been used for the longest time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For a certain key, we can quickly locate the node in the linked list through the hash table to obtain the corresponding val.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The linked list obviously supports fast insertion and deletion at any position, just change the pointer. It&amp;rsquo;s just that the traditional linked list cannot quickly access an element at a certain position according to the index, but here with the help of the hash table, you can quickly map to any linked list node through the key, and then insert and delete.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;why-doubly-linked-list&#34;&gt;why doubly linked list&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-why-doubly-linked-list&#34; name=&#34;why-doubly-linked-list&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;• It is stored as a specific file on the file server
• The application server is loaded from the file server, and the content of the file is stored in memory
• Advantages of linked list Insert or delete at any position, good performance
• Each line of data in the file matches a node in the linked list
• Changes in content are equivalent to changes in linked list nodes&lt;/p&gt;
&lt;h5 id=&#34;how-to-convert-the-file-into-a-linked-list&#34;&gt;How to convert the file into a linked list&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-how-to-convert-the-file-into-a-linked-list&#34; name=&#34;how-to-convert-the-file-into-a-linked-list&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;aa.txt&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;aaaaaaa
bbbbbbb
ccccc
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Each row is a struct
Key: Unique identifier for each line of the file
Value: the content of each row
preId: predecessor Id, the previous line
afterId: follow-up Id, next line&lt;/p&gt;
&lt;p&gt;Frontend generate the key and the uuid of each row when the front-end page is rendered and record it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uuid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;preId&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;afterId&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aaaaaaa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bbbbbbb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ccccc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;modify-content&#34;&gt;modify content&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-modify-content&#34; name=&#34;modify-content&#34;&gt;&lt;/a&gt;
What information needs to be sent to the server when adding or changing content on the front end&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;edit-files&#34;&gt;edit files&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-edit-files&#34; name=&#34;edit-files&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;create-file-data-flow&#34;&gt;create file data flow&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-create-file-data-flow&#34; name=&#34;create-file-data-flow&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Client&lt;/code&gt; &amp;ndash;1. create file request&amp;ndash;&amp;gt; &lt;code&gt;Web Server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Web Server&lt;/code&gt; &amp;ndash;2. transfer the created file&amp;ndash;&amp;gt; &lt;code&gt;File Server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Web Server&lt;/code&gt; &amp;ndash;3. save Metadata&amp;ndash;&amp;gt; &lt;code&gt;MySQL DB&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;File Serve&lt;/code&gt; &amp;ndash;4. save file&amp;ndash;&amp;gt; &lt;code&gt;File System&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;edit-file-data-flow&#34;&gt;edit file data flow&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-edit-file-data-flow&#34; name=&#34;edit-file-data-flow&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Client&lt;/code&gt; &amp;ndash;1. edit file &amp;ndash;&amp;gt; &lt;code&gt;Web Server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Web Server&lt;/code&gt; &amp;ndash;2. save the modified part&amp;ndash;&amp;gt; &lt;code&gt;Redis&lt;/code&gt; &amp;ndash;&amp;gt; &lt;code&gt;Scheduled Task&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Web Server&lt;/code&gt; &amp;ndash;3. update Metadata&amp;ndash;&amp;gt; &lt;code&gt;MySQL DB&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Scheduled Task&lt;/code&gt; &amp;ndash;4. combine modify&amp;ndash;&amp;gt; &lt;code&gt;File Server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;File Server&lt;/code&gt; &amp;ndash;5. save file&amp;ndash;&amp;gt; &lt;code&gt;Distributed File System&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;When editing, the changed content is saved in Redis as linked list + hash table, and writes asynchronously to the file server.&lt;/p&gt;
&lt;h4 id=&#34;table&#34;&gt;Table&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-table&#34; name=&#34;table&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MySQL&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;n&#34;&gt;fileid&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fileURL&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;filesurfix&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Redis contains 2 keys, one records head and tail; one records each row content after modifying.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;Key: file key
Value: {
dummy: string;
tail: string;
}

Key: file key + row key
Value: {
content: string;
preID: string;
nextID: string;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id=&#34;add-new-row&#34;&gt;add new row&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-add-new-row&#34; name=&#34;add-new-row&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;aa.txt&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;aaaaaaa
bbbbbbb
&amp;lt;!-- add new row --&amp;gt;
eee
ccccc
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uuid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;preId&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;afterId&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aaaaaaa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bbbbbbb&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eee&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ccccc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;How to guarante mutiple users generate the same uuid when operating on the same row&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;modify-new-col&#34;&gt;modify new col&lt;/h5&gt;
&lt;p&gt;&lt;a id=&#34;markdown-modify-new-col&#34; name=&#34;modify-new-col&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;aa.txt&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;aaaaaaa
bbbbxxx
&amp;lt;!-- add new row --&amp;gt;
eee
ccccc
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;uuid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;preId&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;afterId&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aaaaaaa&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;                    &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bbbbxxx&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eee&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ccccc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;99&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;collaborative-editin&#34;&gt;Collaborative Editin&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-collaborative-editin&#34; name=&#34;collaborative-editin&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;display-avatars-edited-by-multiple-people-at-the-same-time&#34;&gt;display avatars edited by multiple people at the same time&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-display-avatars-edited-by-multiple-people-at-the-same-time&#34; name=&#34;display-avatars-edited-by-multiple-people-at-the-same-time&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;user lists saved in NoSQL (The data information of the user list is frequently changed)&lt;/p&gt;
&lt;h4 id=&#34;display-avater-data-flow&#34;&gt;display avater data flow&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-display-avater-data-flow&#34; name=&#34;display-avater-data-flow&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;user 1&lt;/code&gt; : &amp;ndash;1. Update while editing user list &amp;ndash;&amp;gt; &lt;code&gt;server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;user 2&lt;/code&gt; : &amp;ndash;1. Update while editing user list &amp;ndash;&amp;gt; &lt;code&gt;server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;server&lt;/code&gt; : &amp;ndash;2. query user information &amp;ndash;&amp;gt; &lt;code&gt;user list&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;server&lt;/code&gt; : &amp;ndash;3. save the file when editing user list &amp;ndash;&amp;gt; &lt;code&gt;user list&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;display-who-is-editing-the-row&#34;&gt;display who is editing the row&lt;/h4&gt;
&lt;p&gt;&lt;a id=&#34;markdown-display-who-is-editing-the-row&#34; name=&#34;display-who-is-editing-the-row&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;user 1&lt;/code&gt; &amp;ndash; when editing upload user id and row id&amp;ndash;&amp;gt; &lt;code&gt;server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;server&lt;/code&gt; &amp;ndash;  synchronic data to user 2&amp;ndash;&amp;gt; &lt;code&gt;user 2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;server&lt;/code&gt; &amp;mdash;-&amp;gt; &lt;code&gt;Redis key:value&amp;lt; row id : user id&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What cases may be encountered when multiple users edit at the same time?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Multiple people editing a row at the same time&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;One is deleting a row, one is adding&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Simultaneous locking, Decide who to adopt by the time it arrives at the server&lt;/p&gt;
&lt;p&gt;Or use two methods no need lock.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;OT(Operational Transform) &amp;ndash;&amp;gt; Google Docs&lt;/li&gt;
&lt;li&gt;CRDT(Conflict-Free Repicated Data Type)&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;&lt;img src=&#34;https://rileyshen.github.io/images/system9.png&#34;
         alt=&#34;image&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;send coupon&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

</description>
      
    </item>
    
    <item>
      <title>learning System design as a landscape architect 8</title>
      <link>https://rileyshen.github.io/post/sys8/</link>
      <pubDate>Tue, 01 Mar 2022 15:56:39 +0800</pubDate>
      
      <guid>https://rileyshen.github.io/post/sys8/</guid>
      
        <description>&lt;p&gt;Rethink system design in a much fun way, as a former urban planner/landscape planner. Take Bigtable as example&lt;/p&gt;
&lt;!-- more --&gt;
&lt;!-- TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#bigtable&#34; &gt;Bigtable&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#scenario-analysis&#34; &gt;Scenario analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#storage&#34; &gt;Storage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- /TOC --&gt;
&lt;hr&gt;
&lt;h2 id=&#34;bigtable&#34;&gt;Bigtable&lt;/h2&gt;
&lt;p&gt;&lt;a id=&#34;markdown-bigtable&#34; name=&#34;bigtable&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NoSQL, how to scale&lt;/p&gt;
&lt;p&gt;SQL and Complex Queries Are Needed for Real life, which is base on file system.&lt;/p&gt;
&lt;p&gt;DB systems store data as files on the device&amp;rsquo;s local filesystem, provide interface to operate.&lt;/p&gt;
&lt;p&gt;Better understand why we need DB system. You open a closet, find the drawer, get the socks you wanna wear today.&lt;/p&gt;
&lt;p&gt;In this case, DB system is the drawer, the file is the sock.&lt;/p&gt;
&lt;h3 id=&#34;scenario-analysis&#34;&gt;Scenario analysis&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-scenario-analysis&#34; name=&#34;scenario-analysis&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;search, return&lt;/p&gt;
&lt;h3 id=&#34;storage&#34;&gt;Storage&lt;/h3&gt;
&lt;p&gt;&lt;a id=&#34;markdown-storage&#34; name=&#34;storage&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;how about save all data in memory? Bad idea, in District File System File sizes are always measured in PB.&lt;/p&gt;
&lt;p&gt;how about save in Disk (sorting and binary search).&lt;/p&gt;
&lt;p&gt;But how to Edit the file which is saved in Disk?&lt;/p&gt;
&lt;p&gt;method1 :Edit the file directly. (original is 4 bites, now edit to 8 bytes, then the following need move)&lt;/p&gt;
&lt;p&gt;method2: read the file, edit, delete the original one, rewrite the file&lt;/p&gt;
&lt;p&gt;method3: without edit, but append a record at the end of a file (fast)&lt;/p&gt;
&lt;p&gt;BigTable is method 3, use APPEND to improve write performance.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;cons:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;when reading data, how to recognize the newest record
&lt;ul&gt;
&lt;li&gt;timestamp&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;how to Binary Search on unsorted data.
&lt;ul&gt;
&lt;li&gt;Block order&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;repeat blocks affect query performance
&lt;ul&gt;
&lt;li&gt;merge K sorted&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;write-process&#34;&gt;Write process&lt;/h3&gt;
&lt;p&gt;Client 1 &amp;ndash; Write key: Aa + appearance value: 3 &amp;ndash;&amp;gt; Memory (file 0, file 1..) &amp;ndash;Append key: Aa + appearance value: 3 &amp;ndash;&amp;gt; file 1 (unordered)&lt;/p&gt;
&lt;p&gt;when the file 1 reach to 256(or  512 bytes) &amp;ndash;merge/sort&amp;ndash;&amp;gt; Order Block &amp;ndash;&amp;gt; open a new unorder block&lt;/p&gt;
&lt;h4 id=&#34;make-the-last-file-from-unordered-to-ordered&#34;&gt;make the last file from unOrdered to Ordered&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;method 1: sort in memory (Write once(disk), read once(disk), sorted in memory, Write once(disk))&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;method 2: saved in memory from beginning ( sorted in memory, Write once(disk))&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Client 1 &amp;ndash; Write key: Aa + appearance value: 3 &amp;ndash;&amp;gt; Memory (file 0, file 1..unOrdered block, when read to full size) &amp;ndash;Append key: Aa + appearance value: 3 &amp;ndash;&amp;gt;Sorted List &amp;ndash;Serialize to disk&amp;ndash;&amp;gt; file 1 (ordered)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;recover-data-of-different-file-formats-from-crashed-memory&#34;&gt;Recover data of different file formats from crashed memory&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Write Ahead Log&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;read-process&#34;&gt;Read process&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Client 1 &amp;ndash; 1. Read key: Aa + appearance &amp;ndash;&amp;gt; Memory &amp;ndash;2. Read key: Aa + appearance &amp;ndash;&amp;gt;Sorted List(Aa + appearance value: 3)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;no result &amp;ndash; Memory &amp;ndash;3. Read key: Aa + appearance &amp;ndash;&amp;gt; &lt;strong&gt;file 1 (ordered)&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;query-in-ordered-file&#34;&gt;query in ordered file&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Index&lt;/li&gt;
&lt;li&gt;BloomFilter&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;one-easy-way-to-build-index&#34;&gt;One easy way to build index&lt;/h4&gt;
&lt;p&gt;Memory Index&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A: address&lt;/li&gt;
&lt;li&gt;D:&lt;/li&gt;
&lt;li&gt;S:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GFS Sstable 0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apple: 10&lt;/li&gt;
&lt;li&gt;Cxxx: 3&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Daaaa:8&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Xuuu: 19&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sxxx: 9&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Look up key Xuuu, just need binary search from D to S&lt;/p&gt;
&lt;p&gt;In real life, B tree index is good choice.&lt;/p&gt;
&lt;h4 id=&#34;one-better-way-to-read-file&#34;&gt;One better way to read file&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;BloomFilter
&lt;ul&gt;
&lt;li&gt;use 2 hash keys&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;compelete-read-process-with-index-bf&#34;&gt;Compelete Read process with Index, BF&lt;/h3&gt;
&lt;p&gt;Memory:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;file0, Address0&lt;/li&gt;
&lt;li&gt;Index0, bloomfilter 0&lt;/li&gt;
&lt;li&gt;file1, Address1&lt;/li&gt;
&lt;li&gt;Index1, bloomfilter 1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sorted List:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;xx + appearance: 9&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Disk:
File 0 Ordered:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;aa + appearance: 3&lt;/li&gt;
&lt;li&gt;bb+ appearance: 8&lt;/li&gt;
&lt;li&gt;Index 0&lt;/li&gt;
&lt;li&gt;bloomfilter 0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Disk:
File 1 Ordered:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cc + appearance: 3&lt;/li&gt;
&lt;li&gt;dd+ appearance: 8&lt;/li&gt;
&lt;li&gt;xx + appearance: 9&lt;/li&gt;
&lt;li&gt;Index 1&lt;/li&gt;
&lt;li&gt;bloomfilter 1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;First query in unOrdered file&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Client 1 &amp;ndash; 1. Read key: Aa + appearance &amp;ndash;&amp;gt; &lt;code&gt;Memory&lt;/code&gt; &amp;ndash;2. Read key: Aa + appearance &amp;ndash;&amp;gt;&lt;code&gt;Sorted List&lt;/code&gt;(Aa + appearance value: 3)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;return result if it exists&lt;/p&gt;
&lt;p&gt;if not, query in Order File start from lastest.&lt;/p&gt;
&lt;p&gt;use &lt;strong&gt;BloomFilter&lt;/strong&gt; to search the key, query the next file if not exists; otherwise use &lt;strong&gt;index&lt;/strong&gt; to find the value for the key.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;SSTable = Sorted String Table&lt;/p&gt;
&lt;p&gt;Sorted List = Skip List&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;complete-write-process&#34;&gt;Complete Write process&lt;/h3&gt;
&lt;p&gt;Client 1 &amp;ndash; Write key: Aa + appearance value: 3 &amp;ndash;&amp;gt; &lt;code&gt;Memory&lt;/code&gt; (file 0, file 1..) &amp;ndash;Append key: Aa + appearance value: 3 &amp;ndash;&amp;gt; &lt;code&gt;Skip List&lt;/code&gt; (unordered) &amp;ndash;&amp;gt; &lt;code&gt;SSTable 1 (Ordered in Disk)&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How to read/write key: value from 1PB file&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;sharding&#34;&gt;Sharding&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Horizontal Sharding&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Consistent Hash(row key: name)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;multiple machine&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Master has HashMap(key, server address)&lt;/li&gt;
&lt;li&gt;Slave&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;How to read in BigTable with multi-server&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;client &amp;ndash; 1. Read key &amp;ndash;&amp;gt; &lt;code&gt;BigTable Master&lt;/code&gt; &amp;ndash; 2. Get the row key form key, Use the row key to get server id = 1 &amp;ndash;&amp;gt; client&lt;/p&gt;
&lt;p&gt;client &amp;ndash;3. read key &amp;ndash;&amp;gt; &lt;code&gt;Slave Server 1&lt;/code&gt; &amp;ndash;4. return value &amp;ndash;&amp;gt; client&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How to write BigTable&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;write-a-key&#34;&gt;write a key&lt;/h3&gt;
&lt;p&gt;client &amp;ndash; 1. Write key &amp;ndash;&amp;gt; &lt;code&gt;BigTable Master&lt;/code&gt; &amp;ndash; 2. Get the row key form key, Use the row key to get server id = 1 &amp;ndash;&amp;gt; client&lt;/p&gt;
&lt;p&gt;client &amp;ndash;3. Write key, value &amp;ndash;&amp;gt; &lt;code&gt;Slave Server 1&lt;/code&gt; &amp;ndash;4. Done &amp;ndash;&amp;gt; client&lt;/p&gt;
&lt;p&gt;Memory&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write Ahead Log&lt;/li&gt;
&lt;li&gt;save the data into memory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Disk&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SkipList &amp;ndash;&amp;gt; full&lt;/li&gt;
&lt;li&gt;write to SSTable&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Too many data in Slave Server local disk&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;save-data-in-gfs&#34;&gt;save data in GFS&lt;/h3&gt;
&lt;p&gt;Table Server = Store Tablet Slave Server&lt;/p&gt;
&lt;p&gt;client &amp;ndash;&amp;gt; &lt;code&gt;Tablet Server 1&lt;/code&gt; in &lt;code&gt;BigTable&lt;/code&gt; &amp;ndash;&amp;gt; GFS&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Read and write the same key at the same time&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;distributed-lock&#34;&gt;distributed lock&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Zookeeper&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;write-a-key-with-distributed-lock&#34;&gt;write a key with distributed lock&lt;/h4&gt;
&lt;p&gt;client 1 &amp;ndash; 1. Write key and lock the key&amp;ndash;&amp;gt; &lt;code&gt;Lock Server&lt;/code&gt; &amp;ndash; 2. Get the row key form key &amp;ndash;&amp;gt; client 1 &amp;ndash;3. key value &amp;ndash;&amp;gt;&lt;code&gt;Tablet Server 1&lt;/code&gt; &amp;ndash;4. Done&amp;ndash;&amp;gt; client 1&lt;/p&gt;
&lt;p&gt;client 1 &amp;ndash; 5. unlock key&amp;ndash;&amp;gt; &lt;code&gt;Lock Server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;client 2 &amp;ndash; 1. Read key and lock the key&amp;ndash;&amp;gt; &lt;code&gt;Lock Server&lt;/code&gt; &amp;ndash; 2. key is locked &amp;ndash;&amp;gt; client 2&lt;/p&gt;
&lt;h4 id=&#34;advantage-distribute-lock&#34;&gt;Advantage Distribute Lock&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;the metadata is store on the Lock&lt;/li&gt;
&lt;li&gt;master don&amp;rsquo;t need store MetaData&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;write-with-lock&#34;&gt;Write with lock&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;client 1&lt;/strong&gt; &amp;ndash;&amp;gt; 1. Write key and lock the key &amp;ndash;&amp;gt;&lt;strong&gt;Lock Server&lt;/strong&gt;&amp;ndash; 2. return Server Id&amp;ndash;&amp;gt;&lt;strong&gt;client 1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;client 1&lt;/strong&gt; &amp;ndash;&amp;gt; 3. key value &amp;ndash;&amp;gt;&lt;strong&gt;Tablet Server 1&lt;/strong&gt;&amp;ndash; 4. &lt;code&gt;write log&lt;/code&gt; &lt;key value&gt;&amp;ndash;&amp;gt;&lt;strong&gt;Lock Disk&lt;/strong&gt; &amp;ndash; 6. write to GFS&amp;ndash;&amp;gt; &lt;strong&gt;GFS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tablet Server 1&lt;/strong&gt;&amp;ndash; 5. &lt;code&gt;write key. value&lt;/code&gt;&amp;ndash;&amp;gt;&lt;strong&gt;Memory&lt;/strong&gt; &amp;ndash; 6. write to GFS&amp;ndash;&amp;gt; &lt;strong&gt;GFS&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;read-with-lock&#34;&gt;Read with lock&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;client 1&lt;/strong&gt; &amp;ndash;&amp;gt; 1. Read key and lock the key &amp;ndash;&amp;gt;&lt;strong&gt;Lock Server&lt;/strong&gt;&amp;ndash; 2. return Server Id&amp;ndash;&amp;gt;&lt;strong&gt;client 1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;client 1&lt;/strong&gt; &amp;ndash;&amp;gt; 3. Read key &amp;ndash;&amp;gt;&lt;strong&gt;Tablet Server 1&lt;/strong&gt;&amp;ndash; 4. Check memory, Bloom Filter, index on each sstable,  &amp;ndash;&amp;gt;&lt;strong&gt;Memory&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tablet Server 1&lt;/strong&gt;&amp;ndash; 5. Binary search on sstable to find the value&amp;ndash;&amp;gt;&lt;strong&gt;GFS&lt;/strong&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://rileyshen.github.io/images/system9.png&#34;
         alt=&#34;image&#34;/&gt;&lt;figcaption&gt;
            &lt;h4&gt;send coupon&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

</description>
      
    </item>
    
  </channel>
</rss>